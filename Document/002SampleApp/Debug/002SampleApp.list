
002SampleApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001a9c  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001c4  08001bcc  08001bcc  00011bcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001d90  08001d90  000200b4  2**0
                  CONTENTS
  4 .ARM          00000000  08001d90  08001d90  000200b4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001d90  08001d90  000200b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001d90  08001d90  00011d90  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001d94  08001d94  00011d94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000b4  20000000  08001d98  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000e4  200000b4  08001e4c  000200b4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000198  08001e4c  00020198  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200b4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000156f  00000000  00000000  000200dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000419  00000000  00000000  0002164c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000090  00000000  00000000  00021a68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000068  00000000  00000000  00021af8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002268  00000000  00000000  00021b60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000cba  00000000  00000000  00023dc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008542  00000000  00000000  00024a82  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0002cfc4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001044  00000000  00000000  0002d018  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200000b4 	.word	0x200000b4
 800014c:	00000000 	.word	0x00000000
 8000150:	08001bb4 	.word	0x08001bb4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200000b8 	.word	0x200000b8
 800016c:	08001bb4 	.word	0x08001bb4

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000180:	b580      	push	{r7, lr}
 8000182:	b084      	sub	sp, #16
 8000184:	af00      	add	r7, sp, #0
 8000186:	6078      	str	r0, [r7, #4]
 8000188:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800018a:	2300      	movs	r3, #0
 800018c:	60fb      	str	r3, [r7, #12]
 800018e:	e015      	b.n	80001bc <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 8000190:	f000 f9de 	bl	8000550 <rand>
 8000194:	4602      	mov	r2, r0
 8000196:	68fb      	ldr	r3, [r7, #12]
 8000198:	009b      	lsls	r3, r3, #2
 800019a:	6879      	ldr	r1, [r7, #4]
 800019c:	4419      	add	r1, r3
 800019e:	4b0c      	ldr	r3, [pc, #48]	; (80001d0 <array_fill_numbers+0x50>)
 80001a0:	fb83 0302 	smull	r0, r3, r3, r2
 80001a4:	1198      	asrs	r0, r3, #6
 80001a6:	17d3      	asrs	r3, r2, #31
 80001a8:	1ac3      	subs	r3, r0, r3
 80001aa:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80001ae:	fb00 f303 	mul.w	r3, r0, r3
 80001b2:	1ad3      	subs	r3, r2, r3
 80001b4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80001b6:	68fb      	ldr	r3, [r7, #12]
 80001b8:	3301      	adds	r3, #1
 80001ba:	60fb      	str	r3, [r7, #12]
 80001bc:	68fa      	ldr	r2, [r7, #12]
 80001be:	683b      	ldr	r3, [r7, #0]
 80001c0:	429a      	cmp	r2, r3
 80001c2:	d3e5      	bcc.n	8000190 <array_fill_numbers+0x10>
    }

}
 80001c4:	bf00      	nop
 80001c6:	bf00      	nop
 80001c8:	3710      	adds	r7, #16
 80001ca:	46bd      	mov	sp, r7
 80001cc:	bd80      	pop	{r7, pc}
 80001ce:	bf00      	nop
 80001d0:	10624dd3 	.word	0x10624dd3

080001d4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b086      	sub	sp, #24
 80001d8:	af00      	add	r7, sp, #0
 80001da:	60f8      	str	r0, [r7, #12]
 80001dc:	60b9      	str	r1, [r7, #8]
 80001de:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80001e0:	6879      	ldr	r1, [r7, #4]
 80001e2:	480e      	ldr	r0, [pc, #56]	; (800021c <display_numbers+0x48>)
 80001e4:	f000 f988 	bl	80004f8 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80001e8:	2300      	movs	r3, #0
 80001ea:	617b      	str	r3, [r7, #20]
 80001ec:	e00b      	b.n	8000206 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80001ee:	697b      	ldr	r3, [r7, #20]
 80001f0:	009b      	lsls	r3, r3, #2
 80001f2:	68fa      	ldr	r2, [r7, #12]
 80001f4:	4413      	add	r3, r2
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	4619      	mov	r1, r3
 80001fa:	4809      	ldr	r0, [pc, #36]	; (8000220 <display_numbers+0x4c>)
 80001fc:	f000 f97c 	bl	80004f8 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000200:	697b      	ldr	r3, [r7, #20]
 8000202:	3301      	adds	r3, #1
 8000204:	617b      	str	r3, [r7, #20]
 8000206:	697a      	ldr	r2, [r7, #20]
 8000208:	68bb      	ldr	r3, [r7, #8]
 800020a:	429a      	cmp	r2, r3
 800020c:	d3ef      	bcc.n	80001ee <display_numbers+0x1a>
    }

    printf("\n");
 800020e:	200a      	movs	r0, #10
 8000210:	f000 f98a 	bl	8000528 <putchar>
}
 8000214:	bf00      	nop
 8000216:	3718      	adds	r7, #24
 8000218:	46bd      	mov	sp, r7
 800021a:	bd80      	pop	{r7, pc}
 800021c:	08001bcc 	.word	0x08001bcc
 8000220:	08001bd0 	.word	0x08001bd0

08000224 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000224:	b480      	push	{r7}
 8000226:	b085      	sub	sp, #20
 8000228:	af00      	add	r7, sp, #0
 800022a:	6078      	str	r0, [r7, #4]
 800022c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000234:	683b      	ldr	r3, [r7, #0]
 8000236:	681a      	ldr	r2, [r3, #0]
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800023c:	683b      	ldr	r3, [r7, #0]
 800023e:	68fa      	ldr	r2, [r7, #12]
 8000240:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000242:	4b04      	ldr	r3, [pc, #16]	; (8000254 <swap_numbers+0x30>)
 8000244:	220a      	movs	r2, #10
 8000246:	601a      	str	r2, [r3, #0]
}
 8000248:	bf00      	nop
 800024a:	3714      	adds	r7, #20
 800024c:	46bd      	mov	sp, r7
 800024e:	bc80      	pop	{r7}
 8000250:	4770      	bx	lr
 8000252:	bf00      	nop
 8000254:	20000044 	.word	0x20000044

08000258 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000258:	b580      	push	{r7, lr}
 800025a:	b086      	sub	sp, #24
 800025c:	af00      	add	r7, sp, #0
 800025e:	6078      	str	r0, [r7, #4]
 8000260:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000262:	2300      	movs	r3, #0
 8000264:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000266:	2300      	movs	r3, #0
 8000268:	617b      	str	r3, [r7, #20]
 800026a:	e02f      	b.n	80002cc <bubble_sort+0x74>
    {
        flag=0;
 800026c:	2300      	movs	r3, #0
 800026e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000270:	2300      	movs	r3, #0
 8000272:	613b      	str	r3, [r7, #16]
 8000274:	e01d      	b.n	80002b2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000276:	693b      	ldr	r3, [r7, #16]
 8000278:	009b      	lsls	r3, r3, #2
 800027a:	687a      	ldr	r2, [r7, #4]
 800027c:	4413      	add	r3, r2
 800027e:	681a      	ldr	r2, [r3, #0]
 8000280:	693b      	ldr	r3, [r7, #16]
 8000282:	3301      	adds	r3, #1
 8000284:	009b      	lsls	r3, r3, #2
 8000286:	6879      	ldr	r1, [r7, #4]
 8000288:	440b      	add	r3, r1
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	429a      	cmp	r2, r3
 800028e:	dd0d      	ble.n	80002ac <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 8000290:	693b      	ldr	r3, [r7, #16]
 8000292:	009b      	lsls	r3, r3, #2
 8000294:	687a      	ldr	r2, [r7, #4]
 8000296:	18d0      	adds	r0, r2, r3
 8000298:	693b      	ldr	r3, [r7, #16]
 800029a:	3301      	adds	r3, #1
 800029c:	009b      	lsls	r3, r3, #2
 800029e:	687a      	ldr	r2, [r7, #4]
 80002a0:	4413      	add	r3, r2
 80002a2:	4619      	mov	r1, r3
 80002a4:	f7ff ffbe 	bl	8000224 <swap_numbers>
                flag=1;
 80002a8:	2301      	movs	r3, #1
 80002aa:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80002ac:	693b      	ldr	r3, [r7, #16]
 80002ae:	3301      	adds	r3, #1
 80002b0:	613b      	str	r3, [r7, #16]
 80002b2:	697b      	ldr	r3, [r7, #20]
 80002b4:	683a      	ldr	r2, [r7, #0]
 80002b6:	1ad3      	subs	r3, r2, r3
 80002b8:	1e5a      	subs	r2, r3, #1
 80002ba:	693b      	ldr	r3, [r7, #16]
 80002bc:	429a      	cmp	r2, r3
 80002be:	d8da      	bhi.n	8000276 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80002c0:	68fb      	ldr	r3, [r7, #12]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d008      	beq.n	80002d8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80002c6:	697b      	ldr	r3, [r7, #20]
 80002c8:	3301      	adds	r3, #1
 80002ca:	617b      	str	r3, [r7, #20]
 80002cc:	683b      	ldr	r3, [r7, #0]
 80002ce:	1e5a      	subs	r2, r3, #1
 80002d0:	697b      	ldr	r3, [r7, #20]
 80002d2:	429a      	cmp	r2, r3
 80002d4:	d8ca      	bhi.n	800026c <bubble_sort+0x14>
            break;
    }
}
 80002d6:	e000      	b.n	80002da <bubble_sort+0x82>
            break;
 80002d8:	bf00      	nop
}
 80002da:	bf00      	nop
 80002dc:	3718      	adds	r7, #24
 80002de:	46bd      	mov	sp, r7
 80002e0:	bd80      	pop	{r7, pc}

080002e2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80002e2:	b480      	push	{r7}
 80002e4:	b087      	sub	sp, #28
 80002e6:	af00      	add	r7, sp, #0
 80002e8:	6078      	str	r0, [r7, #4]
 80002ea:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80002ec:	2301      	movs	r3, #1
 80002ee:	617b      	str	r3, [r7, #20]
 80002f0:	e02c      	b.n	800034c <insertion_sort+0x6a>
     {
         j=i-1;
 80002f2:	697b      	ldr	r3, [r7, #20]
 80002f4:	3b01      	subs	r3, #1
 80002f6:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 80002f8:	697b      	ldr	r3, [r7, #20]
 80002fa:	009b      	lsls	r3, r3, #2
 80002fc:	687a      	ldr	r2, [r7, #4]
 80002fe:	4413      	add	r3, r2
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000304:	e00d      	b.n	8000322 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000306:	693b      	ldr	r3, [r7, #16]
 8000308:	009b      	lsls	r3, r3, #2
 800030a:	687a      	ldr	r2, [r7, #4]
 800030c:	441a      	add	r2, r3
 800030e:	693b      	ldr	r3, [r7, #16]
 8000310:	3301      	adds	r3, #1
 8000312:	009b      	lsls	r3, r3, #2
 8000314:	6879      	ldr	r1, [r7, #4]
 8000316:	440b      	add	r3, r1
 8000318:	6812      	ldr	r2, [r2, #0]
 800031a:	601a      	str	r2, [r3, #0]
             j--;
 800031c:	693b      	ldr	r3, [r7, #16]
 800031e:	3b01      	subs	r3, #1
 8000320:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000322:	693b      	ldr	r3, [r7, #16]
 8000324:	2b00      	cmp	r3, #0
 8000326:	db07      	blt.n	8000338 <insertion_sort+0x56>
 8000328:	693b      	ldr	r3, [r7, #16]
 800032a:	009b      	lsls	r3, r3, #2
 800032c:	687a      	ldr	r2, [r7, #4]
 800032e:	4413      	add	r3, r2
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	68fa      	ldr	r2, [r7, #12]
 8000334:	429a      	cmp	r2, r3
 8000336:	dbe6      	blt.n	8000306 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000338:	693b      	ldr	r3, [r7, #16]
 800033a:	3301      	adds	r3, #1
 800033c:	009b      	lsls	r3, r3, #2
 800033e:	687a      	ldr	r2, [r7, #4]
 8000340:	4413      	add	r3, r2
 8000342:	68fa      	ldr	r2, [r7, #12]
 8000344:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000346:	697b      	ldr	r3, [r7, #20]
 8000348:	3301      	adds	r3, #1
 800034a:	617b      	str	r3, [r7, #20]
 800034c:	697b      	ldr	r3, [r7, #20]
 800034e:	683a      	ldr	r2, [r7, #0]
 8000350:	429a      	cmp	r2, r3
 8000352:	d8ce      	bhi.n	80002f2 <insertion_sort+0x10>
     }


}
 8000354:	bf00      	nop
 8000356:	bf00      	nop
 8000358:	371c      	adds	r7, #28
 800035a:	46bd      	mov	sp, r7
 800035c:	bc80      	pop	{r7}
 800035e:	4770      	bx	lr

08000360 <main>:

extern void initialise_monitor_handles(void);

int main()
{
 8000360:	b580      	push	{r7, lr}
 8000362:	b082      	sub	sp, #8
 8000364:	af00      	add	r7, sp, #0
	initialise_monitor_handles();
 8000366:	f001 fb81 	bl	8001a6c <initialise_monitor_handles>

    unsigned int len = sizeof(numbers)/sizeof(int);
 800036a:	2311      	movs	r3, #17
 800036c:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800036e:	6879      	ldr	r1, [r7, #4]
 8000370:	4813      	ldr	r0, [pc, #76]	; (80003c0 <main+0x60>)
 8000372:	f7ff ff05 	bl	8000180 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 8000376:	4a13      	ldr	r2, [pc, #76]	; (80003c4 <main+0x64>)
 8000378:	6879      	ldr	r1, [r7, #4]
 800037a:	4811      	ldr	r0, [pc, #68]	; (80003c0 <main+0x60>)
 800037c:	f7ff ff2a 	bl	80001d4 <display_numbers>

    bubble_sort(numbers,len);
 8000380:	6879      	ldr	r1, [r7, #4]
 8000382:	480f      	ldr	r0, [pc, #60]	; (80003c0 <main+0x60>)
 8000384:	f7ff ff68 	bl	8000258 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000388:	4a0f      	ldr	r2, [pc, #60]	; (80003c8 <main+0x68>)
 800038a:	6879      	ldr	r1, [r7, #4]
 800038c:	480c      	ldr	r0, [pc, #48]	; (80003c0 <main+0x60>)
 800038e:	f7ff ff21 	bl	80001d4 <display_numbers>

    array_fill_numbers(numbers,len);
 8000392:	6879      	ldr	r1, [r7, #4]
 8000394:	480a      	ldr	r0, [pc, #40]	; (80003c0 <main+0x60>)
 8000396:	f7ff fef3 	bl	8000180 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 800039a:	4a0c      	ldr	r2, [pc, #48]	; (80003cc <main+0x6c>)
 800039c:	6879      	ldr	r1, [r7, #4]
 800039e:	4808      	ldr	r0, [pc, #32]	; (80003c0 <main+0x60>)
 80003a0:	f7ff ff18 	bl	80001d4 <display_numbers>

    insertion_sort(numbers,len);
 80003a4:	6879      	ldr	r1, [r7, #4]
 80003a6:	4806      	ldr	r0, [pc, #24]	; (80003c0 <main+0x60>)
 80003a8:	f7ff ff9b 	bl	80002e2 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80003ac:	4a08      	ldr	r2, [pc, #32]	; (80003d0 <main+0x70>)
 80003ae:	6879      	ldr	r1, [r7, #4]
 80003b0:	4803      	ldr	r0, [pc, #12]	; (80003c0 <main+0x60>)
 80003b2:	f7ff ff0f 	bl	80001d4 <display_numbers>



    return 0;
 80003b6:	2300      	movs	r3, #0
}
 80003b8:	4618      	mov	r0, r3
 80003ba:	3708      	adds	r7, #8
 80003bc:	46bd      	mov	sp, r7
 80003be:	bd80      	pop	{r7, pc}
 80003c0:	20000000 	.word	0x20000000
 80003c4:	08001bd8 	.word	0x08001bd8
 80003c8:	08001bec 	.word	0x08001bec
 80003cc:	08001c00 	.word	0x08001c00
 80003d0:	08001c14 	.word	0x08001c14

080003d4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003d4:	b580      	push	{r7, lr}
 80003d6:	b086      	sub	sp, #24
 80003d8:	af00      	add	r7, sp, #0
 80003da:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003dc:	4a14      	ldr	r2, [pc, #80]	; (8000430 <_sbrk+0x5c>)
 80003de:	4b15      	ldr	r3, [pc, #84]	; (8000434 <_sbrk+0x60>)
 80003e0:	1ad3      	subs	r3, r2, r3
 80003e2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003e4:	697b      	ldr	r3, [r7, #20]
 80003e6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003e8:	4b13      	ldr	r3, [pc, #76]	; (8000438 <_sbrk+0x64>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	2b00      	cmp	r3, #0
 80003ee:	d102      	bne.n	80003f6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003f0:	4b11      	ldr	r3, [pc, #68]	; (8000438 <_sbrk+0x64>)
 80003f2:	4a12      	ldr	r2, [pc, #72]	; (800043c <_sbrk+0x68>)
 80003f4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003f6:	4b10      	ldr	r3, [pc, #64]	; (8000438 <_sbrk+0x64>)
 80003f8:	681a      	ldr	r2, [r3, #0]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4413      	add	r3, r2
 80003fe:	693a      	ldr	r2, [r7, #16]
 8000400:	429a      	cmp	r2, r3
 8000402:	d207      	bcs.n	8000414 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000404:	f000 f846 	bl	8000494 <__errno>
 8000408:	4603      	mov	r3, r0
 800040a:	220c      	movs	r2, #12
 800040c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800040e:	f04f 33ff 	mov.w	r3, #4294967295
 8000412:	e009      	b.n	8000428 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000414:	4b08      	ldr	r3, [pc, #32]	; (8000438 <_sbrk+0x64>)
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800041a:	4b07      	ldr	r3, [pc, #28]	; (8000438 <_sbrk+0x64>)
 800041c:	681a      	ldr	r2, [r3, #0]
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	4413      	add	r3, r2
 8000422:	4a05      	ldr	r2, [pc, #20]	; (8000438 <_sbrk+0x64>)
 8000424:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000426:	68fb      	ldr	r3, [r7, #12]
}
 8000428:	4618      	mov	r0, r3
 800042a:	3718      	adds	r7, #24
 800042c:	46bd      	mov	sp, r7
 800042e:	bd80      	pop	{r7, pc}
 8000430:	20005000 	.word	0x20005000
 8000434:	00000400 	.word	0x00000400
 8000438:	200000d0 	.word	0x200000d0
 800043c:	20000198 	.word	0x20000198

08000440 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000440:	480d      	ldr	r0, [pc, #52]	; (8000478 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000442:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000444:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000448:	480c      	ldr	r0, [pc, #48]	; (800047c <LoopForever+0x6>)
  ldr r1, =_edata
 800044a:	490d      	ldr	r1, [pc, #52]	; (8000480 <LoopForever+0xa>)
  ldr r2, =_sidata
 800044c:	4a0d      	ldr	r2, [pc, #52]	; (8000484 <LoopForever+0xe>)
  movs r3, #0
 800044e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000450:	e002      	b.n	8000458 <LoopCopyDataInit>

08000452 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000452:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000454:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000456:	3304      	adds	r3, #4

08000458 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000458:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800045a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800045c:	d3f9      	bcc.n	8000452 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800045e:	4a0a      	ldr	r2, [pc, #40]	; (8000488 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000460:	4c0a      	ldr	r4, [pc, #40]	; (800048c <LoopForever+0x16>)
  movs r3, #0
 8000462:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000464:	e001      	b.n	800046a <LoopFillZerobss>

08000466 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000466:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000468:	3204      	adds	r2, #4

0800046a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800046a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800046c:	d3fb      	bcc.n	8000466 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800046e:	f000 f817 	bl	80004a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000472:	f7ff ff75 	bl	8000360 <main>

08000476 <LoopForever>:

LoopForever:
    b LoopForever
 8000476:	e7fe      	b.n	8000476 <LoopForever>
  ldr   r0, =_estack
 8000478:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800047c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000480:	200000b4 	.word	0x200000b4
  ldr r2, =_sidata
 8000484:	08001d98 	.word	0x08001d98
  ldr r2, =_sbss
 8000488:	200000b4 	.word	0x200000b4
  ldr r4, =_ebss
 800048c:	20000198 	.word	0x20000198

08000490 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000490:	e7fe      	b.n	8000490 <ADC1_2_IRQHandler>
	...

08000494 <__errno>:
 8000494:	4b01      	ldr	r3, [pc, #4]	; (800049c <__errno+0x8>)
 8000496:	6818      	ldr	r0, [r3, #0]
 8000498:	4770      	bx	lr
 800049a:	bf00      	nop
 800049c:	20000048 	.word	0x20000048

080004a0 <__libc_init_array>:
 80004a0:	b570      	push	{r4, r5, r6, lr}
 80004a2:	2600      	movs	r6, #0
 80004a4:	4d0c      	ldr	r5, [pc, #48]	; (80004d8 <__libc_init_array+0x38>)
 80004a6:	4c0d      	ldr	r4, [pc, #52]	; (80004dc <__libc_init_array+0x3c>)
 80004a8:	1b64      	subs	r4, r4, r5
 80004aa:	10a4      	asrs	r4, r4, #2
 80004ac:	42a6      	cmp	r6, r4
 80004ae:	d109      	bne.n	80004c4 <__libc_init_array+0x24>
 80004b0:	f001 fb80 	bl	8001bb4 <_init>
 80004b4:	2600      	movs	r6, #0
 80004b6:	4d0a      	ldr	r5, [pc, #40]	; (80004e0 <__libc_init_array+0x40>)
 80004b8:	4c0a      	ldr	r4, [pc, #40]	; (80004e4 <__libc_init_array+0x44>)
 80004ba:	1b64      	subs	r4, r4, r5
 80004bc:	10a4      	asrs	r4, r4, #2
 80004be:	42a6      	cmp	r6, r4
 80004c0:	d105      	bne.n	80004ce <__libc_init_array+0x2e>
 80004c2:	bd70      	pop	{r4, r5, r6, pc}
 80004c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80004c8:	4798      	blx	r3
 80004ca:	3601      	adds	r6, #1
 80004cc:	e7ee      	b.n	80004ac <__libc_init_array+0xc>
 80004ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80004d2:	4798      	blx	r3
 80004d4:	3601      	adds	r6, #1
 80004d6:	e7f2      	b.n	80004be <__libc_init_array+0x1e>
 80004d8:	08001d90 	.word	0x08001d90
 80004dc:	08001d90 	.word	0x08001d90
 80004e0:	08001d90 	.word	0x08001d90
 80004e4:	08001d94 	.word	0x08001d94

080004e8 <memset>:
 80004e8:	4603      	mov	r3, r0
 80004ea:	4402      	add	r2, r0
 80004ec:	4293      	cmp	r3, r2
 80004ee:	d100      	bne.n	80004f2 <memset+0xa>
 80004f0:	4770      	bx	lr
 80004f2:	f803 1b01 	strb.w	r1, [r3], #1
 80004f6:	e7f9      	b.n	80004ec <memset+0x4>

080004f8 <iprintf>:
 80004f8:	b40f      	push	{r0, r1, r2, r3}
 80004fa:	4b0a      	ldr	r3, [pc, #40]	; (8000524 <iprintf+0x2c>)
 80004fc:	b513      	push	{r0, r1, r4, lr}
 80004fe:	681c      	ldr	r4, [r3, #0]
 8000500:	b124      	cbz	r4, 800050c <iprintf+0x14>
 8000502:	69a3      	ldr	r3, [r4, #24]
 8000504:	b913      	cbnz	r3, 800050c <iprintf+0x14>
 8000506:	4620      	mov	r0, r4
 8000508:	f000 f8d8 	bl	80006bc <__sinit>
 800050c:	ab05      	add	r3, sp, #20
 800050e:	4620      	mov	r0, r4
 8000510:	9a04      	ldr	r2, [sp, #16]
 8000512:	68a1      	ldr	r1, [r4, #8]
 8000514:	9301      	str	r3, [sp, #4]
 8000516:	f000 fa59 	bl	80009cc <_vfiprintf_r>
 800051a:	b002      	add	sp, #8
 800051c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000520:	b004      	add	sp, #16
 8000522:	4770      	bx	lr
 8000524:	20000048 	.word	0x20000048

08000528 <putchar>:
 8000528:	b538      	push	{r3, r4, r5, lr}
 800052a:	4b08      	ldr	r3, [pc, #32]	; (800054c <putchar+0x24>)
 800052c:	4605      	mov	r5, r0
 800052e:	681c      	ldr	r4, [r3, #0]
 8000530:	b124      	cbz	r4, 800053c <putchar+0x14>
 8000532:	69a3      	ldr	r3, [r4, #24]
 8000534:	b913      	cbnz	r3, 800053c <putchar+0x14>
 8000536:	4620      	mov	r0, r4
 8000538:	f000 f8c0 	bl	80006bc <__sinit>
 800053c:	4629      	mov	r1, r5
 800053e:	4620      	mov	r0, r4
 8000540:	68a2      	ldr	r2, [r4, #8]
 8000542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000546:	f000 bd07 	b.w	8000f58 <_putc_r>
 800054a:	bf00      	nop
 800054c:	20000048 	.word	0x20000048

08000550 <rand>:
 8000550:	4b17      	ldr	r3, [pc, #92]	; (80005b0 <rand+0x60>)
 8000552:	b510      	push	{r4, lr}
 8000554:	681c      	ldr	r4, [r3, #0]
 8000556:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000558:	b9b3      	cbnz	r3, 8000588 <rand+0x38>
 800055a:	2018      	movs	r0, #24
 800055c:	f000 f960 	bl	8000820 <malloc>
 8000560:	4602      	mov	r2, r0
 8000562:	63a0      	str	r0, [r4, #56]	; 0x38
 8000564:	b920      	cbnz	r0, 8000570 <rand+0x20>
 8000566:	214e      	movs	r1, #78	; 0x4e
 8000568:	4b12      	ldr	r3, [pc, #72]	; (80005b4 <rand+0x64>)
 800056a:	4813      	ldr	r0, [pc, #76]	; (80005b8 <rand+0x68>)
 800056c:	f000 f830 	bl	80005d0 <__assert_func>
 8000570:	4912      	ldr	r1, [pc, #72]	; (80005bc <rand+0x6c>)
 8000572:	4b13      	ldr	r3, [pc, #76]	; (80005c0 <rand+0x70>)
 8000574:	e9c0 1300 	strd	r1, r3, [r0]
 8000578:	4b12      	ldr	r3, [pc, #72]	; (80005c4 <rand+0x74>)
 800057a:	2100      	movs	r1, #0
 800057c:	6083      	str	r3, [r0, #8]
 800057e:	230b      	movs	r3, #11
 8000580:	8183      	strh	r3, [r0, #12]
 8000582:	2001      	movs	r0, #1
 8000584:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8000588:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800058a:	480f      	ldr	r0, [pc, #60]	; (80005c8 <rand+0x78>)
 800058c:	690a      	ldr	r2, [r1, #16]
 800058e:	694b      	ldr	r3, [r1, #20]
 8000590:	4350      	muls	r0, r2
 8000592:	4c0e      	ldr	r4, [pc, #56]	; (80005cc <rand+0x7c>)
 8000594:	fb04 0003 	mla	r0, r4, r3, r0
 8000598:	fba2 3404 	umull	r3, r4, r2, r4
 800059c:	1c5a      	adds	r2, r3, #1
 800059e:	4404      	add	r4, r0
 80005a0:	f144 0000 	adc.w	r0, r4, #0
 80005a4:	e9c1 2004 	strd	r2, r0, [r1, #16]
 80005a8:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80005ac:	bd10      	pop	{r4, pc}
 80005ae:	bf00      	nop
 80005b0:	20000048 	.word	0x20000048
 80005b4:	08001c2c 	.word	0x08001c2c
 80005b8:	08001c43 	.word	0x08001c43
 80005bc:	abcd330e 	.word	0xabcd330e
 80005c0:	e66d1234 	.word	0xe66d1234
 80005c4:	0005deec 	.word	0x0005deec
 80005c8:	5851f42d 	.word	0x5851f42d
 80005cc:	4c957f2d 	.word	0x4c957f2d

080005d0 <__assert_func>:
 80005d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80005d2:	4614      	mov	r4, r2
 80005d4:	461a      	mov	r2, r3
 80005d6:	4b09      	ldr	r3, [pc, #36]	; (80005fc <__assert_func+0x2c>)
 80005d8:	4605      	mov	r5, r0
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	68d8      	ldr	r0, [r3, #12]
 80005de:	b14c      	cbz	r4, 80005f4 <__assert_func+0x24>
 80005e0:	4b07      	ldr	r3, [pc, #28]	; (8000600 <__assert_func+0x30>)
 80005e2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80005e6:	9100      	str	r1, [sp, #0]
 80005e8:	462b      	mov	r3, r5
 80005ea:	4906      	ldr	r1, [pc, #24]	; (8000604 <__assert_func+0x34>)
 80005ec:	f000 f8e4 	bl	80007b8 <fiprintf>
 80005f0:	f000 fe20 	bl	8001234 <abort>
 80005f4:	4b04      	ldr	r3, [pc, #16]	; (8000608 <__assert_func+0x38>)
 80005f6:	461c      	mov	r4, r3
 80005f8:	e7f3      	b.n	80005e2 <__assert_func+0x12>
 80005fa:	bf00      	nop
 80005fc:	20000048 	.word	0x20000048
 8000600:	08001ca2 	.word	0x08001ca2
 8000604:	08001caf 	.word	0x08001caf
 8000608:	08001cdd 	.word	0x08001cdd

0800060c <std>:
 800060c:	2300      	movs	r3, #0
 800060e:	b510      	push	{r4, lr}
 8000610:	4604      	mov	r4, r0
 8000612:	e9c0 3300 	strd	r3, r3, [r0]
 8000616:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800061a:	6083      	str	r3, [r0, #8]
 800061c:	8181      	strh	r1, [r0, #12]
 800061e:	6643      	str	r3, [r0, #100]	; 0x64
 8000620:	81c2      	strh	r2, [r0, #14]
 8000622:	6183      	str	r3, [r0, #24]
 8000624:	4619      	mov	r1, r3
 8000626:	2208      	movs	r2, #8
 8000628:	305c      	adds	r0, #92	; 0x5c
 800062a:	f7ff ff5d 	bl	80004e8 <memset>
 800062e:	4b05      	ldr	r3, [pc, #20]	; (8000644 <std+0x38>)
 8000630:	6224      	str	r4, [r4, #32]
 8000632:	6263      	str	r3, [r4, #36]	; 0x24
 8000634:	4b04      	ldr	r3, [pc, #16]	; (8000648 <std+0x3c>)
 8000636:	62a3      	str	r3, [r4, #40]	; 0x28
 8000638:	4b04      	ldr	r3, [pc, #16]	; (800064c <std+0x40>)
 800063a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800063c:	4b04      	ldr	r3, [pc, #16]	; (8000650 <std+0x44>)
 800063e:	6323      	str	r3, [r4, #48]	; 0x30
 8000640:	bd10      	pop	{r4, pc}
 8000642:	bf00      	nop
 8000644:	08001009 	.word	0x08001009
 8000648:	0800102b 	.word	0x0800102b
 800064c:	08001063 	.word	0x08001063
 8000650:	08001087 	.word	0x08001087

08000654 <_cleanup_r>:
 8000654:	4901      	ldr	r1, [pc, #4]	; (800065c <_cleanup_r+0x8>)
 8000656:	f000 b8c1 	b.w	80007dc <_fwalk_reent>
 800065a:	bf00      	nop
 800065c:	08001371 	.word	0x08001371

08000660 <__sfmoreglue>:
 8000660:	b570      	push	{r4, r5, r6, lr}
 8000662:	2568      	movs	r5, #104	; 0x68
 8000664:	1e4a      	subs	r2, r1, #1
 8000666:	4355      	muls	r5, r2
 8000668:	460e      	mov	r6, r1
 800066a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800066e:	f000 f92b 	bl	80008c8 <_malloc_r>
 8000672:	4604      	mov	r4, r0
 8000674:	b140      	cbz	r0, 8000688 <__sfmoreglue+0x28>
 8000676:	2100      	movs	r1, #0
 8000678:	e9c0 1600 	strd	r1, r6, [r0]
 800067c:	300c      	adds	r0, #12
 800067e:	60a0      	str	r0, [r4, #8]
 8000680:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000684:	f7ff ff30 	bl	80004e8 <memset>
 8000688:	4620      	mov	r0, r4
 800068a:	bd70      	pop	{r4, r5, r6, pc}

0800068c <__sfp_lock_acquire>:
 800068c:	4801      	ldr	r0, [pc, #4]	; (8000694 <__sfp_lock_acquire+0x8>)
 800068e:	f000 b8c5 	b.w	800081c <__retarget_lock_acquire_recursive>
 8000692:	bf00      	nop
 8000694:	20000190 	.word	0x20000190

08000698 <__sfp_lock_release>:
 8000698:	4801      	ldr	r0, [pc, #4]	; (80006a0 <__sfp_lock_release+0x8>)
 800069a:	f000 b8c0 	b.w	800081e <__retarget_lock_release_recursive>
 800069e:	bf00      	nop
 80006a0:	20000190 	.word	0x20000190

080006a4 <__sinit_lock_acquire>:
 80006a4:	4801      	ldr	r0, [pc, #4]	; (80006ac <__sinit_lock_acquire+0x8>)
 80006a6:	f000 b8b9 	b.w	800081c <__retarget_lock_acquire_recursive>
 80006aa:	bf00      	nop
 80006ac:	2000018b 	.word	0x2000018b

080006b0 <__sinit_lock_release>:
 80006b0:	4801      	ldr	r0, [pc, #4]	; (80006b8 <__sinit_lock_release+0x8>)
 80006b2:	f000 b8b4 	b.w	800081e <__retarget_lock_release_recursive>
 80006b6:	bf00      	nop
 80006b8:	2000018b 	.word	0x2000018b

080006bc <__sinit>:
 80006bc:	b510      	push	{r4, lr}
 80006be:	4604      	mov	r4, r0
 80006c0:	f7ff fff0 	bl	80006a4 <__sinit_lock_acquire>
 80006c4:	69a3      	ldr	r3, [r4, #24]
 80006c6:	b11b      	cbz	r3, 80006d0 <__sinit+0x14>
 80006c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006cc:	f7ff bff0 	b.w	80006b0 <__sinit_lock_release>
 80006d0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80006d4:	6523      	str	r3, [r4, #80]	; 0x50
 80006d6:	4b13      	ldr	r3, [pc, #76]	; (8000724 <__sinit+0x68>)
 80006d8:	4a13      	ldr	r2, [pc, #76]	; (8000728 <__sinit+0x6c>)
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	62a2      	str	r2, [r4, #40]	; 0x28
 80006de:	42a3      	cmp	r3, r4
 80006e0:	bf08      	it	eq
 80006e2:	2301      	moveq	r3, #1
 80006e4:	4620      	mov	r0, r4
 80006e6:	bf08      	it	eq
 80006e8:	61a3      	streq	r3, [r4, #24]
 80006ea:	f000 f81f 	bl	800072c <__sfp>
 80006ee:	6060      	str	r0, [r4, #4]
 80006f0:	4620      	mov	r0, r4
 80006f2:	f000 f81b 	bl	800072c <__sfp>
 80006f6:	60a0      	str	r0, [r4, #8]
 80006f8:	4620      	mov	r0, r4
 80006fa:	f000 f817 	bl	800072c <__sfp>
 80006fe:	2200      	movs	r2, #0
 8000700:	2104      	movs	r1, #4
 8000702:	60e0      	str	r0, [r4, #12]
 8000704:	6860      	ldr	r0, [r4, #4]
 8000706:	f7ff ff81 	bl	800060c <std>
 800070a:	2201      	movs	r2, #1
 800070c:	2109      	movs	r1, #9
 800070e:	68a0      	ldr	r0, [r4, #8]
 8000710:	f7ff ff7c 	bl	800060c <std>
 8000714:	2202      	movs	r2, #2
 8000716:	2112      	movs	r1, #18
 8000718:	68e0      	ldr	r0, [r4, #12]
 800071a:	f7ff ff77 	bl	800060c <std>
 800071e:	2301      	movs	r3, #1
 8000720:	61a3      	str	r3, [r4, #24]
 8000722:	e7d1      	b.n	80006c8 <__sinit+0xc>
 8000724:	08001c28 	.word	0x08001c28
 8000728:	08000655 	.word	0x08000655

0800072c <__sfp>:
 800072c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800072e:	4607      	mov	r7, r0
 8000730:	f7ff ffac 	bl	800068c <__sfp_lock_acquire>
 8000734:	4b1e      	ldr	r3, [pc, #120]	; (80007b0 <__sfp+0x84>)
 8000736:	681e      	ldr	r6, [r3, #0]
 8000738:	69b3      	ldr	r3, [r6, #24]
 800073a:	b913      	cbnz	r3, 8000742 <__sfp+0x16>
 800073c:	4630      	mov	r0, r6
 800073e:	f7ff ffbd 	bl	80006bc <__sinit>
 8000742:	3648      	adds	r6, #72	; 0x48
 8000744:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000748:	3b01      	subs	r3, #1
 800074a:	d503      	bpl.n	8000754 <__sfp+0x28>
 800074c:	6833      	ldr	r3, [r6, #0]
 800074e:	b30b      	cbz	r3, 8000794 <__sfp+0x68>
 8000750:	6836      	ldr	r6, [r6, #0]
 8000752:	e7f7      	b.n	8000744 <__sfp+0x18>
 8000754:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000758:	b9d5      	cbnz	r5, 8000790 <__sfp+0x64>
 800075a:	4b16      	ldr	r3, [pc, #88]	; (80007b4 <__sfp+0x88>)
 800075c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000760:	60e3      	str	r3, [r4, #12]
 8000762:	6665      	str	r5, [r4, #100]	; 0x64
 8000764:	f000 f859 	bl	800081a <__retarget_lock_init_recursive>
 8000768:	f7ff ff96 	bl	8000698 <__sfp_lock_release>
 800076c:	2208      	movs	r2, #8
 800076e:	4629      	mov	r1, r5
 8000770:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000774:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000778:	6025      	str	r5, [r4, #0]
 800077a:	61a5      	str	r5, [r4, #24]
 800077c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000780:	f7ff feb2 	bl	80004e8 <memset>
 8000784:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000788:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800078c:	4620      	mov	r0, r4
 800078e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000790:	3468      	adds	r4, #104	; 0x68
 8000792:	e7d9      	b.n	8000748 <__sfp+0x1c>
 8000794:	2104      	movs	r1, #4
 8000796:	4638      	mov	r0, r7
 8000798:	f7ff ff62 	bl	8000660 <__sfmoreglue>
 800079c:	4604      	mov	r4, r0
 800079e:	6030      	str	r0, [r6, #0]
 80007a0:	2800      	cmp	r0, #0
 80007a2:	d1d5      	bne.n	8000750 <__sfp+0x24>
 80007a4:	f7ff ff78 	bl	8000698 <__sfp_lock_release>
 80007a8:	230c      	movs	r3, #12
 80007aa:	603b      	str	r3, [r7, #0]
 80007ac:	e7ee      	b.n	800078c <__sfp+0x60>
 80007ae:	bf00      	nop
 80007b0:	08001c28 	.word	0x08001c28
 80007b4:	ffff0001 	.word	0xffff0001

080007b8 <fiprintf>:
 80007b8:	b40e      	push	{r1, r2, r3}
 80007ba:	b503      	push	{r0, r1, lr}
 80007bc:	4601      	mov	r1, r0
 80007be:	ab03      	add	r3, sp, #12
 80007c0:	4805      	ldr	r0, [pc, #20]	; (80007d8 <fiprintf+0x20>)
 80007c2:	f853 2b04 	ldr.w	r2, [r3], #4
 80007c6:	6800      	ldr	r0, [r0, #0]
 80007c8:	9301      	str	r3, [sp, #4]
 80007ca:	f000 f8ff 	bl	80009cc <_vfiprintf_r>
 80007ce:	b002      	add	sp, #8
 80007d0:	f85d eb04 	ldr.w	lr, [sp], #4
 80007d4:	b003      	add	sp, #12
 80007d6:	4770      	bx	lr
 80007d8:	20000048 	.word	0x20000048

080007dc <_fwalk_reent>:
 80007dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007e0:	4606      	mov	r6, r0
 80007e2:	4688      	mov	r8, r1
 80007e4:	2700      	movs	r7, #0
 80007e6:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007ea:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80007ee:	f1b9 0901 	subs.w	r9, r9, #1
 80007f2:	d505      	bpl.n	8000800 <_fwalk_reent+0x24>
 80007f4:	6824      	ldr	r4, [r4, #0]
 80007f6:	2c00      	cmp	r4, #0
 80007f8:	d1f7      	bne.n	80007ea <_fwalk_reent+0xe>
 80007fa:	4638      	mov	r0, r7
 80007fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000800:	89ab      	ldrh	r3, [r5, #12]
 8000802:	2b01      	cmp	r3, #1
 8000804:	d907      	bls.n	8000816 <_fwalk_reent+0x3a>
 8000806:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800080a:	3301      	adds	r3, #1
 800080c:	d003      	beq.n	8000816 <_fwalk_reent+0x3a>
 800080e:	4629      	mov	r1, r5
 8000810:	4630      	mov	r0, r6
 8000812:	47c0      	blx	r8
 8000814:	4307      	orrs	r7, r0
 8000816:	3568      	adds	r5, #104	; 0x68
 8000818:	e7e9      	b.n	80007ee <_fwalk_reent+0x12>

0800081a <__retarget_lock_init_recursive>:
 800081a:	4770      	bx	lr

0800081c <__retarget_lock_acquire_recursive>:
 800081c:	4770      	bx	lr

0800081e <__retarget_lock_release_recursive>:
 800081e:	4770      	bx	lr

08000820 <malloc>:
 8000820:	4b02      	ldr	r3, [pc, #8]	; (800082c <malloc+0xc>)
 8000822:	4601      	mov	r1, r0
 8000824:	6818      	ldr	r0, [r3, #0]
 8000826:	f000 b84f 	b.w	80008c8 <_malloc_r>
 800082a:	bf00      	nop
 800082c:	20000048 	.word	0x20000048

08000830 <_free_r>:
 8000830:	b538      	push	{r3, r4, r5, lr}
 8000832:	4605      	mov	r5, r0
 8000834:	2900      	cmp	r1, #0
 8000836:	d043      	beq.n	80008c0 <_free_r+0x90>
 8000838:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800083c:	1f0c      	subs	r4, r1, #4
 800083e:	2b00      	cmp	r3, #0
 8000840:	bfb8      	it	lt
 8000842:	18e4      	addlt	r4, r4, r3
 8000844:	f000 fe54 	bl	80014f0 <__malloc_lock>
 8000848:	4a1e      	ldr	r2, [pc, #120]	; (80008c4 <_free_r+0x94>)
 800084a:	6813      	ldr	r3, [r2, #0]
 800084c:	4610      	mov	r0, r2
 800084e:	b933      	cbnz	r3, 800085e <_free_r+0x2e>
 8000850:	6063      	str	r3, [r4, #4]
 8000852:	6014      	str	r4, [r2, #0]
 8000854:	4628      	mov	r0, r5
 8000856:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800085a:	f000 be4f 	b.w	80014fc <__malloc_unlock>
 800085e:	42a3      	cmp	r3, r4
 8000860:	d90a      	bls.n	8000878 <_free_r+0x48>
 8000862:	6821      	ldr	r1, [r4, #0]
 8000864:	1862      	adds	r2, r4, r1
 8000866:	4293      	cmp	r3, r2
 8000868:	bf01      	itttt	eq
 800086a:	681a      	ldreq	r2, [r3, #0]
 800086c:	685b      	ldreq	r3, [r3, #4]
 800086e:	1852      	addeq	r2, r2, r1
 8000870:	6022      	streq	r2, [r4, #0]
 8000872:	6063      	str	r3, [r4, #4]
 8000874:	6004      	str	r4, [r0, #0]
 8000876:	e7ed      	b.n	8000854 <_free_r+0x24>
 8000878:	461a      	mov	r2, r3
 800087a:	685b      	ldr	r3, [r3, #4]
 800087c:	b10b      	cbz	r3, 8000882 <_free_r+0x52>
 800087e:	42a3      	cmp	r3, r4
 8000880:	d9fa      	bls.n	8000878 <_free_r+0x48>
 8000882:	6811      	ldr	r1, [r2, #0]
 8000884:	1850      	adds	r0, r2, r1
 8000886:	42a0      	cmp	r0, r4
 8000888:	d10b      	bne.n	80008a2 <_free_r+0x72>
 800088a:	6820      	ldr	r0, [r4, #0]
 800088c:	4401      	add	r1, r0
 800088e:	1850      	adds	r0, r2, r1
 8000890:	4283      	cmp	r3, r0
 8000892:	6011      	str	r1, [r2, #0]
 8000894:	d1de      	bne.n	8000854 <_free_r+0x24>
 8000896:	6818      	ldr	r0, [r3, #0]
 8000898:	685b      	ldr	r3, [r3, #4]
 800089a:	4401      	add	r1, r0
 800089c:	6011      	str	r1, [r2, #0]
 800089e:	6053      	str	r3, [r2, #4]
 80008a0:	e7d8      	b.n	8000854 <_free_r+0x24>
 80008a2:	d902      	bls.n	80008aa <_free_r+0x7a>
 80008a4:	230c      	movs	r3, #12
 80008a6:	602b      	str	r3, [r5, #0]
 80008a8:	e7d4      	b.n	8000854 <_free_r+0x24>
 80008aa:	6820      	ldr	r0, [r4, #0]
 80008ac:	1821      	adds	r1, r4, r0
 80008ae:	428b      	cmp	r3, r1
 80008b0:	bf01      	itttt	eq
 80008b2:	6819      	ldreq	r1, [r3, #0]
 80008b4:	685b      	ldreq	r3, [r3, #4]
 80008b6:	1809      	addeq	r1, r1, r0
 80008b8:	6021      	streq	r1, [r4, #0]
 80008ba:	6063      	str	r3, [r4, #4]
 80008bc:	6054      	str	r4, [r2, #4]
 80008be:	e7c9      	b.n	8000854 <_free_r+0x24>
 80008c0:	bd38      	pop	{r3, r4, r5, pc}
 80008c2:	bf00      	nop
 80008c4:	200000d4 	.word	0x200000d4

080008c8 <_malloc_r>:
 80008c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ca:	1ccd      	adds	r5, r1, #3
 80008cc:	f025 0503 	bic.w	r5, r5, #3
 80008d0:	3508      	adds	r5, #8
 80008d2:	2d0c      	cmp	r5, #12
 80008d4:	bf38      	it	cc
 80008d6:	250c      	movcc	r5, #12
 80008d8:	2d00      	cmp	r5, #0
 80008da:	4606      	mov	r6, r0
 80008dc:	db01      	blt.n	80008e2 <_malloc_r+0x1a>
 80008de:	42a9      	cmp	r1, r5
 80008e0:	d903      	bls.n	80008ea <_malloc_r+0x22>
 80008e2:	230c      	movs	r3, #12
 80008e4:	6033      	str	r3, [r6, #0]
 80008e6:	2000      	movs	r0, #0
 80008e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008ea:	f000 fe01 	bl	80014f0 <__malloc_lock>
 80008ee:	4921      	ldr	r1, [pc, #132]	; (8000974 <_malloc_r+0xac>)
 80008f0:	680a      	ldr	r2, [r1, #0]
 80008f2:	4614      	mov	r4, r2
 80008f4:	b99c      	cbnz	r4, 800091e <_malloc_r+0x56>
 80008f6:	4f20      	ldr	r7, [pc, #128]	; (8000978 <_malloc_r+0xb0>)
 80008f8:	683b      	ldr	r3, [r7, #0]
 80008fa:	b923      	cbnz	r3, 8000906 <_malloc_r+0x3e>
 80008fc:	4621      	mov	r1, r4
 80008fe:	4630      	mov	r0, r6
 8000900:	f000 fb72 	bl	8000fe8 <_sbrk_r>
 8000904:	6038      	str	r0, [r7, #0]
 8000906:	4629      	mov	r1, r5
 8000908:	4630      	mov	r0, r6
 800090a:	f000 fb6d 	bl	8000fe8 <_sbrk_r>
 800090e:	1c43      	adds	r3, r0, #1
 8000910:	d123      	bne.n	800095a <_malloc_r+0x92>
 8000912:	230c      	movs	r3, #12
 8000914:	4630      	mov	r0, r6
 8000916:	6033      	str	r3, [r6, #0]
 8000918:	f000 fdf0 	bl	80014fc <__malloc_unlock>
 800091c:	e7e3      	b.n	80008e6 <_malloc_r+0x1e>
 800091e:	6823      	ldr	r3, [r4, #0]
 8000920:	1b5b      	subs	r3, r3, r5
 8000922:	d417      	bmi.n	8000954 <_malloc_r+0x8c>
 8000924:	2b0b      	cmp	r3, #11
 8000926:	d903      	bls.n	8000930 <_malloc_r+0x68>
 8000928:	6023      	str	r3, [r4, #0]
 800092a:	441c      	add	r4, r3
 800092c:	6025      	str	r5, [r4, #0]
 800092e:	e004      	b.n	800093a <_malloc_r+0x72>
 8000930:	6863      	ldr	r3, [r4, #4]
 8000932:	42a2      	cmp	r2, r4
 8000934:	bf0c      	ite	eq
 8000936:	600b      	streq	r3, [r1, #0]
 8000938:	6053      	strne	r3, [r2, #4]
 800093a:	4630      	mov	r0, r6
 800093c:	f000 fdde 	bl	80014fc <__malloc_unlock>
 8000940:	f104 000b 	add.w	r0, r4, #11
 8000944:	1d23      	adds	r3, r4, #4
 8000946:	f020 0007 	bic.w	r0, r0, #7
 800094a:	1ac2      	subs	r2, r0, r3
 800094c:	d0cc      	beq.n	80008e8 <_malloc_r+0x20>
 800094e:	1a1b      	subs	r3, r3, r0
 8000950:	50a3      	str	r3, [r4, r2]
 8000952:	e7c9      	b.n	80008e8 <_malloc_r+0x20>
 8000954:	4622      	mov	r2, r4
 8000956:	6864      	ldr	r4, [r4, #4]
 8000958:	e7cc      	b.n	80008f4 <_malloc_r+0x2c>
 800095a:	1cc4      	adds	r4, r0, #3
 800095c:	f024 0403 	bic.w	r4, r4, #3
 8000960:	42a0      	cmp	r0, r4
 8000962:	d0e3      	beq.n	800092c <_malloc_r+0x64>
 8000964:	1a21      	subs	r1, r4, r0
 8000966:	4630      	mov	r0, r6
 8000968:	f000 fb3e 	bl	8000fe8 <_sbrk_r>
 800096c:	3001      	adds	r0, #1
 800096e:	d1dd      	bne.n	800092c <_malloc_r+0x64>
 8000970:	e7cf      	b.n	8000912 <_malloc_r+0x4a>
 8000972:	bf00      	nop
 8000974:	200000d4 	.word	0x200000d4
 8000978:	200000d8 	.word	0x200000d8

0800097c <__sfputc_r>:
 800097c:	6893      	ldr	r3, [r2, #8]
 800097e:	b410      	push	{r4}
 8000980:	3b01      	subs	r3, #1
 8000982:	2b00      	cmp	r3, #0
 8000984:	6093      	str	r3, [r2, #8]
 8000986:	da07      	bge.n	8000998 <__sfputc_r+0x1c>
 8000988:	6994      	ldr	r4, [r2, #24]
 800098a:	42a3      	cmp	r3, r4
 800098c:	db01      	blt.n	8000992 <__sfputc_r+0x16>
 800098e:	290a      	cmp	r1, #10
 8000990:	d102      	bne.n	8000998 <__sfputc_r+0x1c>
 8000992:	bc10      	pop	{r4}
 8000994:	f000 bb7c 	b.w	8001090 <__swbuf_r>
 8000998:	6813      	ldr	r3, [r2, #0]
 800099a:	1c58      	adds	r0, r3, #1
 800099c:	6010      	str	r0, [r2, #0]
 800099e:	7019      	strb	r1, [r3, #0]
 80009a0:	4608      	mov	r0, r1
 80009a2:	bc10      	pop	{r4}
 80009a4:	4770      	bx	lr

080009a6 <__sfputs_r>:
 80009a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009a8:	4606      	mov	r6, r0
 80009aa:	460f      	mov	r7, r1
 80009ac:	4614      	mov	r4, r2
 80009ae:	18d5      	adds	r5, r2, r3
 80009b0:	42ac      	cmp	r4, r5
 80009b2:	d101      	bne.n	80009b8 <__sfputs_r+0x12>
 80009b4:	2000      	movs	r0, #0
 80009b6:	e007      	b.n	80009c8 <__sfputs_r+0x22>
 80009b8:	463a      	mov	r2, r7
 80009ba:	4630      	mov	r0, r6
 80009bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009c0:	f7ff ffdc 	bl	800097c <__sfputc_r>
 80009c4:	1c43      	adds	r3, r0, #1
 80009c6:	d1f3      	bne.n	80009b0 <__sfputs_r+0xa>
 80009c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009cc <_vfiprintf_r>:
 80009cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009d0:	460d      	mov	r5, r1
 80009d2:	4614      	mov	r4, r2
 80009d4:	4698      	mov	r8, r3
 80009d6:	4606      	mov	r6, r0
 80009d8:	b09d      	sub	sp, #116	; 0x74
 80009da:	b118      	cbz	r0, 80009e4 <_vfiprintf_r+0x18>
 80009dc:	6983      	ldr	r3, [r0, #24]
 80009de:	b90b      	cbnz	r3, 80009e4 <_vfiprintf_r+0x18>
 80009e0:	f7ff fe6c 	bl	80006bc <__sinit>
 80009e4:	4b89      	ldr	r3, [pc, #548]	; (8000c0c <_vfiprintf_r+0x240>)
 80009e6:	429d      	cmp	r5, r3
 80009e8:	d11b      	bne.n	8000a22 <_vfiprintf_r+0x56>
 80009ea:	6875      	ldr	r5, [r6, #4]
 80009ec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009ee:	07d9      	lsls	r1, r3, #31
 80009f0:	d405      	bmi.n	80009fe <_vfiprintf_r+0x32>
 80009f2:	89ab      	ldrh	r3, [r5, #12]
 80009f4:	059a      	lsls	r2, r3, #22
 80009f6:	d402      	bmi.n	80009fe <_vfiprintf_r+0x32>
 80009f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009fa:	f7ff ff0f 	bl	800081c <__retarget_lock_acquire_recursive>
 80009fe:	89ab      	ldrh	r3, [r5, #12]
 8000a00:	071b      	lsls	r3, r3, #28
 8000a02:	d501      	bpl.n	8000a08 <_vfiprintf_r+0x3c>
 8000a04:	692b      	ldr	r3, [r5, #16]
 8000a06:	b9eb      	cbnz	r3, 8000a44 <_vfiprintf_r+0x78>
 8000a08:	4629      	mov	r1, r5
 8000a0a:	4630      	mov	r0, r6
 8000a0c:	f000 fba4 	bl	8001158 <__swsetup_r>
 8000a10:	b1c0      	cbz	r0, 8000a44 <_vfiprintf_r+0x78>
 8000a12:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a14:	07dc      	lsls	r4, r3, #31
 8000a16:	d50e      	bpl.n	8000a36 <_vfiprintf_r+0x6a>
 8000a18:	f04f 30ff 	mov.w	r0, #4294967295
 8000a1c:	b01d      	add	sp, #116	; 0x74
 8000a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a22:	4b7b      	ldr	r3, [pc, #492]	; (8000c10 <_vfiprintf_r+0x244>)
 8000a24:	429d      	cmp	r5, r3
 8000a26:	d101      	bne.n	8000a2c <_vfiprintf_r+0x60>
 8000a28:	68b5      	ldr	r5, [r6, #8]
 8000a2a:	e7df      	b.n	80009ec <_vfiprintf_r+0x20>
 8000a2c:	4b79      	ldr	r3, [pc, #484]	; (8000c14 <_vfiprintf_r+0x248>)
 8000a2e:	429d      	cmp	r5, r3
 8000a30:	bf08      	it	eq
 8000a32:	68f5      	ldreq	r5, [r6, #12]
 8000a34:	e7da      	b.n	80009ec <_vfiprintf_r+0x20>
 8000a36:	89ab      	ldrh	r3, [r5, #12]
 8000a38:	0598      	lsls	r0, r3, #22
 8000a3a:	d4ed      	bmi.n	8000a18 <_vfiprintf_r+0x4c>
 8000a3c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a3e:	f7ff feee 	bl	800081e <__retarget_lock_release_recursive>
 8000a42:	e7e9      	b.n	8000a18 <_vfiprintf_r+0x4c>
 8000a44:	2300      	movs	r3, #0
 8000a46:	9309      	str	r3, [sp, #36]	; 0x24
 8000a48:	2320      	movs	r3, #32
 8000a4a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a4e:	2330      	movs	r3, #48	; 0x30
 8000a50:	f04f 0901 	mov.w	r9, #1
 8000a54:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a58:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8000c18 <_vfiprintf_r+0x24c>
 8000a5c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a60:	4623      	mov	r3, r4
 8000a62:	469a      	mov	sl, r3
 8000a64:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a68:	b10a      	cbz	r2, 8000a6e <_vfiprintf_r+0xa2>
 8000a6a:	2a25      	cmp	r2, #37	; 0x25
 8000a6c:	d1f9      	bne.n	8000a62 <_vfiprintf_r+0x96>
 8000a6e:	ebba 0b04 	subs.w	fp, sl, r4
 8000a72:	d00b      	beq.n	8000a8c <_vfiprintf_r+0xc0>
 8000a74:	465b      	mov	r3, fp
 8000a76:	4622      	mov	r2, r4
 8000a78:	4629      	mov	r1, r5
 8000a7a:	4630      	mov	r0, r6
 8000a7c:	f7ff ff93 	bl	80009a6 <__sfputs_r>
 8000a80:	3001      	adds	r0, #1
 8000a82:	f000 80aa 	beq.w	8000bda <_vfiprintf_r+0x20e>
 8000a86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a88:	445a      	add	r2, fp
 8000a8a:	9209      	str	r2, [sp, #36]	; 0x24
 8000a8c:	f89a 3000 	ldrb.w	r3, [sl]
 8000a90:	2b00      	cmp	r3, #0
 8000a92:	f000 80a2 	beq.w	8000bda <_vfiprintf_r+0x20e>
 8000a96:	2300      	movs	r3, #0
 8000a98:	f04f 32ff 	mov.w	r2, #4294967295
 8000a9c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000aa0:	f10a 0a01 	add.w	sl, sl, #1
 8000aa4:	9304      	str	r3, [sp, #16]
 8000aa6:	9307      	str	r3, [sp, #28]
 8000aa8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000aac:	931a      	str	r3, [sp, #104]	; 0x68
 8000aae:	4654      	mov	r4, sl
 8000ab0:	2205      	movs	r2, #5
 8000ab2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ab6:	4858      	ldr	r0, [pc, #352]	; (8000c18 <_vfiprintf_r+0x24c>)
 8000ab8:	f000 fd0c 	bl	80014d4 <memchr>
 8000abc:	9a04      	ldr	r2, [sp, #16]
 8000abe:	b9d8      	cbnz	r0, 8000af8 <_vfiprintf_r+0x12c>
 8000ac0:	06d1      	lsls	r1, r2, #27
 8000ac2:	bf44      	itt	mi
 8000ac4:	2320      	movmi	r3, #32
 8000ac6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000aca:	0713      	lsls	r3, r2, #28
 8000acc:	bf44      	itt	mi
 8000ace:	232b      	movmi	r3, #43	; 0x2b
 8000ad0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ad4:	f89a 3000 	ldrb.w	r3, [sl]
 8000ad8:	2b2a      	cmp	r3, #42	; 0x2a
 8000ada:	d015      	beq.n	8000b08 <_vfiprintf_r+0x13c>
 8000adc:	4654      	mov	r4, sl
 8000ade:	2000      	movs	r0, #0
 8000ae0:	f04f 0c0a 	mov.w	ip, #10
 8000ae4:	9a07      	ldr	r2, [sp, #28]
 8000ae6:	4621      	mov	r1, r4
 8000ae8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000aec:	3b30      	subs	r3, #48	; 0x30
 8000aee:	2b09      	cmp	r3, #9
 8000af0:	d94e      	bls.n	8000b90 <_vfiprintf_r+0x1c4>
 8000af2:	b1b0      	cbz	r0, 8000b22 <_vfiprintf_r+0x156>
 8000af4:	9207      	str	r2, [sp, #28]
 8000af6:	e014      	b.n	8000b22 <_vfiprintf_r+0x156>
 8000af8:	eba0 0308 	sub.w	r3, r0, r8
 8000afc:	fa09 f303 	lsl.w	r3, r9, r3
 8000b00:	4313      	orrs	r3, r2
 8000b02:	46a2      	mov	sl, r4
 8000b04:	9304      	str	r3, [sp, #16]
 8000b06:	e7d2      	b.n	8000aae <_vfiprintf_r+0xe2>
 8000b08:	9b03      	ldr	r3, [sp, #12]
 8000b0a:	1d19      	adds	r1, r3, #4
 8000b0c:	681b      	ldr	r3, [r3, #0]
 8000b0e:	9103      	str	r1, [sp, #12]
 8000b10:	2b00      	cmp	r3, #0
 8000b12:	bfbb      	ittet	lt
 8000b14:	425b      	neglt	r3, r3
 8000b16:	f042 0202 	orrlt.w	r2, r2, #2
 8000b1a:	9307      	strge	r3, [sp, #28]
 8000b1c:	9307      	strlt	r3, [sp, #28]
 8000b1e:	bfb8      	it	lt
 8000b20:	9204      	strlt	r2, [sp, #16]
 8000b22:	7823      	ldrb	r3, [r4, #0]
 8000b24:	2b2e      	cmp	r3, #46	; 0x2e
 8000b26:	d10c      	bne.n	8000b42 <_vfiprintf_r+0x176>
 8000b28:	7863      	ldrb	r3, [r4, #1]
 8000b2a:	2b2a      	cmp	r3, #42	; 0x2a
 8000b2c:	d135      	bne.n	8000b9a <_vfiprintf_r+0x1ce>
 8000b2e:	9b03      	ldr	r3, [sp, #12]
 8000b30:	3402      	adds	r4, #2
 8000b32:	1d1a      	adds	r2, r3, #4
 8000b34:	681b      	ldr	r3, [r3, #0]
 8000b36:	9203      	str	r2, [sp, #12]
 8000b38:	2b00      	cmp	r3, #0
 8000b3a:	bfb8      	it	lt
 8000b3c:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b40:	9305      	str	r3, [sp, #20]
 8000b42:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000c28 <_vfiprintf_r+0x25c>
 8000b46:	2203      	movs	r2, #3
 8000b48:	4650      	mov	r0, sl
 8000b4a:	7821      	ldrb	r1, [r4, #0]
 8000b4c:	f000 fcc2 	bl	80014d4 <memchr>
 8000b50:	b140      	cbz	r0, 8000b64 <_vfiprintf_r+0x198>
 8000b52:	2340      	movs	r3, #64	; 0x40
 8000b54:	eba0 000a 	sub.w	r0, r0, sl
 8000b58:	fa03 f000 	lsl.w	r0, r3, r0
 8000b5c:	9b04      	ldr	r3, [sp, #16]
 8000b5e:	3401      	adds	r4, #1
 8000b60:	4303      	orrs	r3, r0
 8000b62:	9304      	str	r3, [sp, #16]
 8000b64:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b68:	2206      	movs	r2, #6
 8000b6a:	482c      	ldr	r0, [pc, #176]	; (8000c1c <_vfiprintf_r+0x250>)
 8000b6c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b70:	f000 fcb0 	bl	80014d4 <memchr>
 8000b74:	2800      	cmp	r0, #0
 8000b76:	d03f      	beq.n	8000bf8 <_vfiprintf_r+0x22c>
 8000b78:	4b29      	ldr	r3, [pc, #164]	; (8000c20 <_vfiprintf_r+0x254>)
 8000b7a:	bb1b      	cbnz	r3, 8000bc4 <_vfiprintf_r+0x1f8>
 8000b7c:	9b03      	ldr	r3, [sp, #12]
 8000b7e:	3307      	adds	r3, #7
 8000b80:	f023 0307 	bic.w	r3, r3, #7
 8000b84:	3308      	adds	r3, #8
 8000b86:	9303      	str	r3, [sp, #12]
 8000b88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b8a:	443b      	add	r3, r7
 8000b8c:	9309      	str	r3, [sp, #36]	; 0x24
 8000b8e:	e767      	b.n	8000a60 <_vfiprintf_r+0x94>
 8000b90:	460c      	mov	r4, r1
 8000b92:	2001      	movs	r0, #1
 8000b94:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b98:	e7a5      	b.n	8000ae6 <_vfiprintf_r+0x11a>
 8000b9a:	2300      	movs	r3, #0
 8000b9c:	f04f 0c0a 	mov.w	ip, #10
 8000ba0:	4619      	mov	r1, r3
 8000ba2:	3401      	adds	r4, #1
 8000ba4:	9305      	str	r3, [sp, #20]
 8000ba6:	4620      	mov	r0, r4
 8000ba8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000bac:	3a30      	subs	r2, #48	; 0x30
 8000bae:	2a09      	cmp	r2, #9
 8000bb0:	d903      	bls.n	8000bba <_vfiprintf_r+0x1ee>
 8000bb2:	2b00      	cmp	r3, #0
 8000bb4:	d0c5      	beq.n	8000b42 <_vfiprintf_r+0x176>
 8000bb6:	9105      	str	r1, [sp, #20]
 8000bb8:	e7c3      	b.n	8000b42 <_vfiprintf_r+0x176>
 8000bba:	4604      	mov	r4, r0
 8000bbc:	2301      	movs	r3, #1
 8000bbe:	fb0c 2101 	mla	r1, ip, r1, r2
 8000bc2:	e7f0      	b.n	8000ba6 <_vfiprintf_r+0x1da>
 8000bc4:	ab03      	add	r3, sp, #12
 8000bc6:	9300      	str	r3, [sp, #0]
 8000bc8:	462a      	mov	r2, r5
 8000bca:	4630      	mov	r0, r6
 8000bcc:	4b15      	ldr	r3, [pc, #84]	; (8000c24 <_vfiprintf_r+0x258>)
 8000bce:	a904      	add	r1, sp, #16
 8000bd0:	f3af 8000 	nop.w
 8000bd4:	4607      	mov	r7, r0
 8000bd6:	1c78      	adds	r0, r7, #1
 8000bd8:	d1d6      	bne.n	8000b88 <_vfiprintf_r+0x1bc>
 8000bda:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000bdc:	07d9      	lsls	r1, r3, #31
 8000bde:	d405      	bmi.n	8000bec <_vfiprintf_r+0x220>
 8000be0:	89ab      	ldrh	r3, [r5, #12]
 8000be2:	059a      	lsls	r2, r3, #22
 8000be4:	d402      	bmi.n	8000bec <_vfiprintf_r+0x220>
 8000be6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000be8:	f7ff fe19 	bl	800081e <__retarget_lock_release_recursive>
 8000bec:	89ab      	ldrh	r3, [r5, #12]
 8000bee:	065b      	lsls	r3, r3, #25
 8000bf0:	f53f af12 	bmi.w	8000a18 <_vfiprintf_r+0x4c>
 8000bf4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000bf6:	e711      	b.n	8000a1c <_vfiprintf_r+0x50>
 8000bf8:	ab03      	add	r3, sp, #12
 8000bfa:	9300      	str	r3, [sp, #0]
 8000bfc:	462a      	mov	r2, r5
 8000bfe:	4630      	mov	r0, r6
 8000c00:	4b08      	ldr	r3, [pc, #32]	; (8000c24 <_vfiprintf_r+0x258>)
 8000c02:	a904      	add	r1, sp, #16
 8000c04:	f000 f882 	bl	8000d0c <_printf_i>
 8000c08:	e7e4      	b.n	8000bd4 <_vfiprintf_r+0x208>
 8000c0a:	bf00      	nop
 8000c0c:	08001d00 	.word	0x08001d00
 8000c10:	08001d20 	.word	0x08001d20
 8000c14:	08001ce0 	.word	0x08001ce0
 8000c18:	08001d40 	.word	0x08001d40
 8000c1c:	08001d4a 	.word	0x08001d4a
 8000c20:	00000000 	.word	0x00000000
 8000c24:	080009a7 	.word	0x080009a7
 8000c28:	08001d46 	.word	0x08001d46

08000c2c <_printf_common>:
 8000c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c30:	4616      	mov	r6, r2
 8000c32:	4699      	mov	r9, r3
 8000c34:	688a      	ldr	r2, [r1, #8]
 8000c36:	690b      	ldr	r3, [r1, #16]
 8000c38:	4607      	mov	r7, r0
 8000c3a:	4293      	cmp	r3, r2
 8000c3c:	bfb8      	it	lt
 8000c3e:	4613      	movlt	r3, r2
 8000c40:	6033      	str	r3, [r6, #0]
 8000c42:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c46:	460c      	mov	r4, r1
 8000c48:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c4c:	b10a      	cbz	r2, 8000c52 <_printf_common+0x26>
 8000c4e:	3301      	adds	r3, #1
 8000c50:	6033      	str	r3, [r6, #0]
 8000c52:	6823      	ldr	r3, [r4, #0]
 8000c54:	0699      	lsls	r1, r3, #26
 8000c56:	bf42      	ittt	mi
 8000c58:	6833      	ldrmi	r3, [r6, #0]
 8000c5a:	3302      	addmi	r3, #2
 8000c5c:	6033      	strmi	r3, [r6, #0]
 8000c5e:	6825      	ldr	r5, [r4, #0]
 8000c60:	f015 0506 	ands.w	r5, r5, #6
 8000c64:	d106      	bne.n	8000c74 <_printf_common+0x48>
 8000c66:	f104 0a19 	add.w	sl, r4, #25
 8000c6a:	68e3      	ldr	r3, [r4, #12]
 8000c6c:	6832      	ldr	r2, [r6, #0]
 8000c6e:	1a9b      	subs	r3, r3, r2
 8000c70:	42ab      	cmp	r3, r5
 8000c72:	dc28      	bgt.n	8000cc6 <_printf_common+0x9a>
 8000c74:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c78:	1e13      	subs	r3, r2, #0
 8000c7a:	6822      	ldr	r2, [r4, #0]
 8000c7c:	bf18      	it	ne
 8000c7e:	2301      	movne	r3, #1
 8000c80:	0692      	lsls	r2, r2, #26
 8000c82:	d42d      	bmi.n	8000ce0 <_printf_common+0xb4>
 8000c84:	4649      	mov	r1, r9
 8000c86:	4638      	mov	r0, r7
 8000c88:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c8c:	47c0      	blx	r8
 8000c8e:	3001      	adds	r0, #1
 8000c90:	d020      	beq.n	8000cd4 <_printf_common+0xa8>
 8000c92:	6823      	ldr	r3, [r4, #0]
 8000c94:	68e5      	ldr	r5, [r4, #12]
 8000c96:	f003 0306 	and.w	r3, r3, #6
 8000c9a:	2b04      	cmp	r3, #4
 8000c9c:	bf18      	it	ne
 8000c9e:	2500      	movne	r5, #0
 8000ca0:	6832      	ldr	r2, [r6, #0]
 8000ca2:	f04f 0600 	mov.w	r6, #0
 8000ca6:	68a3      	ldr	r3, [r4, #8]
 8000ca8:	bf08      	it	eq
 8000caa:	1aad      	subeq	r5, r5, r2
 8000cac:	6922      	ldr	r2, [r4, #16]
 8000cae:	bf08      	it	eq
 8000cb0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000cb4:	4293      	cmp	r3, r2
 8000cb6:	bfc4      	itt	gt
 8000cb8:	1a9b      	subgt	r3, r3, r2
 8000cba:	18ed      	addgt	r5, r5, r3
 8000cbc:	341a      	adds	r4, #26
 8000cbe:	42b5      	cmp	r5, r6
 8000cc0:	d11a      	bne.n	8000cf8 <_printf_common+0xcc>
 8000cc2:	2000      	movs	r0, #0
 8000cc4:	e008      	b.n	8000cd8 <_printf_common+0xac>
 8000cc6:	2301      	movs	r3, #1
 8000cc8:	4652      	mov	r2, sl
 8000cca:	4649      	mov	r1, r9
 8000ccc:	4638      	mov	r0, r7
 8000cce:	47c0      	blx	r8
 8000cd0:	3001      	adds	r0, #1
 8000cd2:	d103      	bne.n	8000cdc <_printf_common+0xb0>
 8000cd4:	f04f 30ff 	mov.w	r0, #4294967295
 8000cd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cdc:	3501      	adds	r5, #1
 8000cde:	e7c4      	b.n	8000c6a <_printf_common+0x3e>
 8000ce0:	2030      	movs	r0, #48	; 0x30
 8000ce2:	18e1      	adds	r1, r4, r3
 8000ce4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000ce8:	1c5a      	adds	r2, r3, #1
 8000cea:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000cee:	4422      	add	r2, r4
 8000cf0:	3302      	adds	r3, #2
 8000cf2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000cf6:	e7c5      	b.n	8000c84 <_printf_common+0x58>
 8000cf8:	2301      	movs	r3, #1
 8000cfa:	4622      	mov	r2, r4
 8000cfc:	4649      	mov	r1, r9
 8000cfe:	4638      	mov	r0, r7
 8000d00:	47c0      	blx	r8
 8000d02:	3001      	adds	r0, #1
 8000d04:	d0e6      	beq.n	8000cd4 <_printf_common+0xa8>
 8000d06:	3601      	adds	r6, #1
 8000d08:	e7d9      	b.n	8000cbe <_printf_common+0x92>
	...

08000d0c <_printf_i>:
 8000d0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d10:	460c      	mov	r4, r1
 8000d12:	7e27      	ldrb	r7, [r4, #24]
 8000d14:	4691      	mov	r9, r2
 8000d16:	2f78      	cmp	r7, #120	; 0x78
 8000d18:	4680      	mov	r8, r0
 8000d1a:	469a      	mov	sl, r3
 8000d1c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000d1e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d22:	d807      	bhi.n	8000d34 <_printf_i+0x28>
 8000d24:	2f62      	cmp	r7, #98	; 0x62
 8000d26:	d80a      	bhi.n	8000d3e <_printf_i+0x32>
 8000d28:	2f00      	cmp	r7, #0
 8000d2a:	f000 80d9 	beq.w	8000ee0 <_printf_i+0x1d4>
 8000d2e:	2f58      	cmp	r7, #88	; 0x58
 8000d30:	f000 80a4 	beq.w	8000e7c <_printf_i+0x170>
 8000d34:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000d38:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d3c:	e03a      	b.n	8000db4 <_printf_i+0xa8>
 8000d3e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d42:	2b15      	cmp	r3, #21
 8000d44:	d8f6      	bhi.n	8000d34 <_printf_i+0x28>
 8000d46:	a001      	add	r0, pc, #4	; (adr r0, 8000d4c <_printf_i+0x40>)
 8000d48:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000d4c:	08000da5 	.word	0x08000da5
 8000d50:	08000db9 	.word	0x08000db9
 8000d54:	08000d35 	.word	0x08000d35
 8000d58:	08000d35 	.word	0x08000d35
 8000d5c:	08000d35 	.word	0x08000d35
 8000d60:	08000d35 	.word	0x08000d35
 8000d64:	08000db9 	.word	0x08000db9
 8000d68:	08000d35 	.word	0x08000d35
 8000d6c:	08000d35 	.word	0x08000d35
 8000d70:	08000d35 	.word	0x08000d35
 8000d74:	08000d35 	.word	0x08000d35
 8000d78:	08000ec7 	.word	0x08000ec7
 8000d7c:	08000de9 	.word	0x08000de9
 8000d80:	08000ea9 	.word	0x08000ea9
 8000d84:	08000d35 	.word	0x08000d35
 8000d88:	08000d35 	.word	0x08000d35
 8000d8c:	08000ee9 	.word	0x08000ee9
 8000d90:	08000d35 	.word	0x08000d35
 8000d94:	08000de9 	.word	0x08000de9
 8000d98:	08000d35 	.word	0x08000d35
 8000d9c:	08000d35 	.word	0x08000d35
 8000da0:	08000eb1 	.word	0x08000eb1
 8000da4:	680b      	ldr	r3, [r1, #0]
 8000da6:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000daa:	1d1a      	adds	r2, r3, #4
 8000dac:	681b      	ldr	r3, [r3, #0]
 8000dae:	600a      	str	r2, [r1, #0]
 8000db0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000db4:	2301      	movs	r3, #1
 8000db6:	e0a4      	b.n	8000f02 <_printf_i+0x1f6>
 8000db8:	6825      	ldr	r5, [r4, #0]
 8000dba:	6808      	ldr	r0, [r1, #0]
 8000dbc:	062e      	lsls	r6, r5, #24
 8000dbe:	f100 0304 	add.w	r3, r0, #4
 8000dc2:	d50a      	bpl.n	8000dda <_printf_i+0xce>
 8000dc4:	6805      	ldr	r5, [r0, #0]
 8000dc6:	600b      	str	r3, [r1, #0]
 8000dc8:	2d00      	cmp	r5, #0
 8000dca:	da03      	bge.n	8000dd4 <_printf_i+0xc8>
 8000dcc:	232d      	movs	r3, #45	; 0x2d
 8000dce:	426d      	negs	r5, r5
 8000dd0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000dd4:	230a      	movs	r3, #10
 8000dd6:	485e      	ldr	r0, [pc, #376]	; (8000f50 <_printf_i+0x244>)
 8000dd8:	e019      	b.n	8000e0e <_printf_i+0x102>
 8000dda:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000dde:	6805      	ldr	r5, [r0, #0]
 8000de0:	600b      	str	r3, [r1, #0]
 8000de2:	bf18      	it	ne
 8000de4:	b22d      	sxthne	r5, r5
 8000de6:	e7ef      	b.n	8000dc8 <_printf_i+0xbc>
 8000de8:	680b      	ldr	r3, [r1, #0]
 8000dea:	6825      	ldr	r5, [r4, #0]
 8000dec:	1d18      	adds	r0, r3, #4
 8000dee:	6008      	str	r0, [r1, #0]
 8000df0:	0628      	lsls	r0, r5, #24
 8000df2:	d501      	bpl.n	8000df8 <_printf_i+0xec>
 8000df4:	681d      	ldr	r5, [r3, #0]
 8000df6:	e002      	b.n	8000dfe <_printf_i+0xf2>
 8000df8:	0669      	lsls	r1, r5, #25
 8000dfa:	d5fb      	bpl.n	8000df4 <_printf_i+0xe8>
 8000dfc:	881d      	ldrh	r5, [r3, #0]
 8000dfe:	2f6f      	cmp	r7, #111	; 0x6f
 8000e00:	bf0c      	ite	eq
 8000e02:	2308      	moveq	r3, #8
 8000e04:	230a      	movne	r3, #10
 8000e06:	4852      	ldr	r0, [pc, #328]	; (8000f50 <_printf_i+0x244>)
 8000e08:	2100      	movs	r1, #0
 8000e0a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e0e:	6866      	ldr	r6, [r4, #4]
 8000e10:	2e00      	cmp	r6, #0
 8000e12:	bfa8      	it	ge
 8000e14:	6821      	ldrge	r1, [r4, #0]
 8000e16:	60a6      	str	r6, [r4, #8]
 8000e18:	bfa4      	itt	ge
 8000e1a:	f021 0104 	bicge.w	r1, r1, #4
 8000e1e:	6021      	strge	r1, [r4, #0]
 8000e20:	b90d      	cbnz	r5, 8000e26 <_printf_i+0x11a>
 8000e22:	2e00      	cmp	r6, #0
 8000e24:	d04d      	beq.n	8000ec2 <_printf_i+0x1b6>
 8000e26:	4616      	mov	r6, r2
 8000e28:	fbb5 f1f3 	udiv	r1, r5, r3
 8000e2c:	fb03 5711 	mls	r7, r3, r1, r5
 8000e30:	5dc7      	ldrb	r7, [r0, r7]
 8000e32:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000e36:	462f      	mov	r7, r5
 8000e38:	42bb      	cmp	r3, r7
 8000e3a:	460d      	mov	r5, r1
 8000e3c:	d9f4      	bls.n	8000e28 <_printf_i+0x11c>
 8000e3e:	2b08      	cmp	r3, #8
 8000e40:	d10b      	bne.n	8000e5a <_printf_i+0x14e>
 8000e42:	6823      	ldr	r3, [r4, #0]
 8000e44:	07df      	lsls	r7, r3, #31
 8000e46:	d508      	bpl.n	8000e5a <_printf_i+0x14e>
 8000e48:	6923      	ldr	r3, [r4, #16]
 8000e4a:	6861      	ldr	r1, [r4, #4]
 8000e4c:	4299      	cmp	r1, r3
 8000e4e:	bfde      	ittt	le
 8000e50:	2330      	movle	r3, #48	; 0x30
 8000e52:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000e56:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000e5a:	1b92      	subs	r2, r2, r6
 8000e5c:	6122      	str	r2, [r4, #16]
 8000e5e:	464b      	mov	r3, r9
 8000e60:	4621      	mov	r1, r4
 8000e62:	4640      	mov	r0, r8
 8000e64:	f8cd a000 	str.w	sl, [sp]
 8000e68:	aa03      	add	r2, sp, #12
 8000e6a:	f7ff fedf 	bl	8000c2c <_printf_common>
 8000e6e:	3001      	adds	r0, #1
 8000e70:	d14c      	bne.n	8000f0c <_printf_i+0x200>
 8000e72:	f04f 30ff 	mov.w	r0, #4294967295
 8000e76:	b004      	add	sp, #16
 8000e78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e7c:	4834      	ldr	r0, [pc, #208]	; (8000f50 <_printf_i+0x244>)
 8000e7e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e82:	680e      	ldr	r6, [r1, #0]
 8000e84:	6823      	ldr	r3, [r4, #0]
 8000e86:	f856 5b04 	ldr.w	r5, [r6], #4
 8000e8a:	061f      	lsls	r7, r3, #24
 8000e8c:	600e      	str	r6, [r1, #0]
 8000e8e:	d514      	bpl.n	8000eba <_printf_i+0x1ae>
 8000e90:	07d9      	lsls	r1, r3, #31
 8000e92:	bf44      	itt	mi
 8000e94:	f043 0320 	orrmi.w	r3, r3, #32
 8000e98:	6023      	strmi	r3, [r4, #0]
 8000e9a:	b91d      	cbnz	r5, 8000ea4 <_printf_i+0x198>
 8000e9c:	6823      	ldr	r3, [r4, #0]
 8000e9e:	f023 0320 	bic.w	r3, r3, #32
 8000ea2:	6023      	str	r3, [r4, #0]
 8000ea4:	2310      	movs	r3, #16
 8000ea6:	e7af      	b.n	8000e08 <_printf_i+0xfc>
 8000ea8:	6823      	ldr	r3, [r4, #0]
 8000eaa:	f043 0320 	orr.w	r3, r3, #32
 8000eae:	6023      	str	r3, [r4, #0]
 8000eb0:	2378      	movs	r3, #120	; 0x78
 8000eb2:	4828      	ldr	r0, [pc, #160]	; (8000f54 <_printf_i+0x248>)
 8000eb4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000eb8:	e7e3      	b.n	8000e82 <_printf_i+0x176>
 8000eba:	065e      	lsls	r6, r3, #25
 8000ebc:	bf48      	it	mi
 8000ebe:	b2ad      	uxthmi	r5, r5
 8000ec0:	e7e6      	b.n	8000e90 <_printf_i+0x184>
 8000ec2:	4616      	mov	r6, r2
 8000ec4:	e7bb      	b.n	8000e3e <_printf_i+0x132>
 8000ec6:	680b      	ldr	r3, [r1, #0]
 8000ec8:	6826      	ldr	r6, [r4, #0]
 8000eca:	1d1d      	adds	r5, r3, #4
 8000ecc:	6960      	ldr	r0, [r4, #20]
 8000ece:	600d      	str	r5, [r1, #0]
 8000ed0:	0635      	lsls	r5, r6, #24
 8000ed2:	681b      	ldr	r3, [r3, #0]
 8000ed4:	d501      	bpl.n	8000eda <_printf_i+0x1ce>
 8000ed6:	6018      	str	r0, [r3, #0]
 8000ed8:	e002      	b.n	8000ee0 <_printf_i+0x1d4>
 8000eda:	0671      	lsls	r1, r6, #25
 8000edc:	d5fb      	bpl.n	8000ed6 <_printf_i+0x1ca>
 8000ede:	8018      	strh	r0, [r3, #0]
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	4616      	mov	r6, r2
 8000ee4:	6123      	str	r3, [r4, #16]
 8000ee6:	e7ba      	b.n	8000e5e <_printf_i+0x152>
 8000ee8:	680b      	ldr	r3, [r1, #0]
 8000eea:	1d1a      	adds	r2, r3, #4
 8000eec:	600a      	str	r2, [r1, #0]
 8000eee:	681e      	ldr	r6, [r3, #0]
 8000ef0:	2100      	movs	r1, #0
 8000ef2:	4630      	mov	r0, r6
 8000ef4:	6862      	ldr	r2, [r4, #4]
 8000ef6:	f000 faed 	bl	80014d4 <memchr>
 8000efa:	b108      	cbz	r0, 8000f00 <_printf_i+0x1f4>
 8000efc:	1b80      	subs	r0, r0, r6
 8000efe:	6060      	str	r0, [r4, #4]
 8000f00:	6863      	ldr	r3, [r4, #4]
 8000f02:	6123      	str	r3, [r4, #16]
 8000f04:	2300      	movs	r3, #0
 8000f06:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f0a:	e7a8      	b.n	8000e5e <_printf_i+0x152>
 8000f0c:	4632      	mov	r2, r6
 8000f0e:	4649      	mov	r1, r9
 8000f10:	4640      	mov	r0, r8
 8000f12:	6923      	ldr	r3, [r4, #16]
 8000f14:	47d0      	blx	sl
 8000f16:	3001      	adds	r0, #1
 8000f18:	d0ab      	beq.n	8000e72 <_printf_i+0x166>
 8000f1a:	6823      	ldr	r3, [r4, #0]
 8000f1c:	079b      	lsls	r3, r3, #30
 8000f1e:	d413      	bmi.n	8000f48 <_printf_i+0x23c>
 8000f20:	68e0      	ldr	r0, [r4, #12]
 8000f22:	9b03      	ldr	r3, [sp, #12]
 8000f24:	4298      	cmp	r0, r3
 8000f26:	bfb8      	it	lt
 8000f28:	4618      	movlt	r0, r3
 8000f2a:	e7a4      	b.n	8000e76 <_printf_i+0x16a>
 8000f2c:	2301      	movs	r3, #1
 8000f2e:	4632      	mov	r2, r6
 8000f30:	4649      	mov	r1, r9
 8000f32:	4640      	mov	r0, r8
 8000f34:	47d0      	blx	sl
 8000f36:	3001      	adds	r0, #1
 8000f38:	d09b      	beq.n	8000e72 <_printf_i+0x166>
 8000f3a:	3501      	adds	r5, #1
 8000f3c:	68e3      	ldr	r3, [r4, #12]
 8000f3e:	9903      	ldr	r1, [sp, #12]
 8000f40:	1a5b      	subs	r3, r3, r1
 8000f42:	42ab      	cmp	r3, r5
 8000f44:	dcf2      	bgt.n	8000f2c <_printf_i+0x220>
 8000f46:	e7eb      	b.n	8000f20 <_printf_i+0x214>
 8000f48:	2500      	movs	r5, #0
 8000f4a:	f104 0619 	add.w	r6, r4, #25
 8000f4e:	e7f5      	b.n	8000f3c <_printf_i+0x230>
 8000f50:	08001d51 	.word	0x08001d51
 8000f54:	08001d62 	.word	0x08001d62

08000f58 <_putc_r>:
 8000f58:	b570      	push	{r4, r5, r6, lr}
 8000f5a:	460d      	mov	r5, r1
 8000f5c:	4614      	mov	r4, r2
 8000f5e:	4606      	mov	r6, r0
 8000f60:	b118      	cbz	r0, 8000f6a <_putc_r+0x12>
 8000f62:	6983      	ldr	r3, [r0, #24]
 8000f64:	b90b      	cbnz	r3, 8000f6a <_putc_r+0x12>
 8000f66:	f7ff fba9 	bl	80006bc <__sinit>
 8000f6a:	4b1c      	ldr	r3, [pc, #112]	; (8000fdc <_putc_r+0x84>)
 8000f6c:	429c      	cmp	r4, r3
 8000f6e:	d124      	bne.n	8000fba <_putc_r+0x62>
 8000f70:	6874      	ldr	r4, [r6, #4]
 8000f72:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000f74:	07d8      	lsls	r0, r3, #31
 8000f76:	d405      	bmi.n	8000f84 <_putc_r+0x2c>
 8000f78:	89a3      	ldrh	r3, [r4, #12]
 8000f7a:	0599      	lsls	r1, r3, #22
 8000f7c:	d402      	bmi.n	8000f84 <_putc_r+0x2c>
 8000f7e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000f80:	f7ff fc4c 	bl	800081c <__retarget_lock_acquire_recursive>
 8000f84:	68a3      	ldr	r3, [r4, #8]
 8000f86:	3b01      	subs	r3, #1
 8000f88:	2b00      	cmp	r3, #0
 8000f8a:	60a3      	str	r3, [r4, #8]
 8000f8c:	da05      	bge.n	8000f9a <_putc_r+0x42>
 8000f8e:	69a2      	ldr	r2, [r4, #24]
 8000f90:	4293      	cmp	r3, r2
 8000f92:	db1c      	blt.n	8000fce <_putc_r+0x76>
 8000f94:	b2eb      	uxtb	r3, r5
 8000f96:	2b0a      	cmp	r3, #10
 8000f98:	d019      	beq.n	8000fce <_putc_r+0x76>
 8000f9a:	6823      	ldr	r3, [r4, #0]
 8000f9c:	1c5a      	adds	r2, r3, #1
 8000f9e:	6022      	str	r2, [r4, #0]
 8000fa0:	701d      	strb	r5, [r3, #0]
 8000fa2:	b2ed      	uxtb	r5, r5
 8000fa4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000fa6:	07da      	lsls	r2, r3, #31
 8000fa8:	d405      	bmi.n	8000fb6 <_putc_r+0x5e>
 8000faa:	89a3      	ldrh	r3, [r4, #12]
 8000fac:	059b      	lsls	r3, r3, #22
 8000fae:	d402      	bmi.n	8000fb6 <_putc_r+0x5e>
 8000fb0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000fb2:	f7ff fc34 	bl	800081e <__retarget_lock_release_recursive>
 8000fb6:	4628      	mov	r0, r5
 8000fb8:	bd70      	pop	{r4, r5, r6, pc}
 8000fba:	4b09      	ldr	r3, [pc, #36]	; (8000fe0 <_putc_r+0x88>)
 8000fbc:	429c      	cmp	r4, r3
 8000fbe:	d101      	bne.n	8000fc4 <_putc_r+0x6c>
 8000fc0:	68b4      	ldr	r4, [r6, #8]
 8000fc2:	e7d6      	b.n	8000f72 <_putc_r+0x1a>
 8000fc4:	4b07      	ldr	r3, [pc, #28]	; (8000fe4 <_putc_r+0x8c>)
 8000fc6:	429c      	cmp	r4, r3
 8000fc8:	bf08      	it	eq
 8000fca:	68f4      	ldreq	r4, [r6, #12]
 8000fcc:	e7d1      	b.n	8000f72 <_putc_r+0x1a>
 8000fce:	4629      	mov	r1, r5
 8000fd0:	4622      	mov	r2, r4
 8000fd2:	4630      	mov	r0, r6
 8000fd4:	f000 f85c 	bl	8001090 <__swbuf_r>
 8000fd8:	4605      	mov	r5, r0
 8000fda:	e7e3      	b.n	8000fa4 <_putc_r+0x4c>
 8000fdc:	08001d00 	.word	0x08001d00
 8000fe0:	08001d20 	.word	0x08001d20
 8000fe4:	08001ce0 	.word	0x08001ce0

08000fe8 <_sbrk_r>:
 8000fe8:	b538      	push	{r3, r4, r5, lr}
 8000fea:	2300      	movs	r3, #0
 8000fec:	4d05      	ldr	r5, [pc, #20]	; (8001004 <_sbrk_r+0x1c>)
 8000fee:	4604      	mov	r4, r0
 8000ff0:	4608      	mov	r0, r1
 8000ff2:	602b      	str	r3, [r5, #0]
 8000ff4:	f7ff f9ee 	bl	80003d4 <_sbrk>
 8000ff8:	1c43      	adds	r3, r0, #1
 8000ffa:	d102      	bne.n	8001002 <_sbrk_r+0x1a>
 8000ffc:	682b      	ldr	r3, [r5, #0]
 8000ffe:	b103      	cbz	r3, 8001002 <_sbrk_r+0x1a>
 8001000:	6023      	str	r3, [r4, #0]
 8001002:	bd38      	pop	{r3, r4, r5, pc}
 8001004:	20000194 	.word	0x20000194

08001008 <__sread>:
 8001008:	b510      	push	{r4, lr}
 800100a:	460c      	mov	r4, r1
 800100c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001010:	f000 fa7a 	bl	8001508 <_read_r>
 8001014:	2800      	cmp	r0, #0
 8001016:	bfab      	itete	ge
 8001018:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800101a:	89a3      	ldrhlt	r3, [r4, #12]
 800101c:	181b      	addge	r3, r3, r0
 800101e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001022:	bfac      	ite	ge
 8001024:	6563      	strge	r3, [r4, #84]	; 0x54
 8001026:	81a3      	strhlt	r3, [r4, #12]
 8001028:	bd10      	pop	{r4, pc}

0800102a <__swrite>:
 800102a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800102e:	461f      	mov	r7, r3
 8001030:	898b      	ldrh	r3, [r1, #12]
 8001032:	4605      	mov	r5, r0
 8001034:	05db      	lsls	r3, r3, #23
 8001036:	460c      	mov	r4, r1
 8001038:	4616      	mov	r6, r2
 800103a:	d505      	bpl.n	8001048 <__swrite+0x1e>
 800103c:	2302      	movs	r3, #2
 800103e:	2200      	movs	r2, #0
 8001040:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001044:	f000 f9d0 	bl	80013e8 <_lseek_r>
 8001048:	89a3      	ldrh	r3, [r4, #12]
 800104a:	4632      	mov	r2, r6
 800104c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001050:	81a3      	strh	r3, [r4, #12]
 8001052:	4628      	mov	r0, r5
 8001054:	463b      	mov	r3, r7
 8001056:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800105a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800105e:	f000 b869 	b.w	8001134 <_write_r>

08001062 <__sseek>:
 8001062:	b510      	push	{r4, lr}
 8001064:	460c      	mov	r4, r1
 8001066:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800106a:	f000 f9bd 	bl	80013e8 <_lseek_r>
 800106e:	1c43      	adds	r3, r0, #1
 8001070:	89a3      	ldrh	r3, [r4, #12]
 8001072:	bf15      	itete	ne
 8001074:	6560      	strne	r0, [r4, #84]	; 0x54
 8001076:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800107a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800107e:	81a3      	strheq	r3, [r4, #12]
 8001080:	bf18      	it	ne
 8001082:	81a3      	strhne	r3, [r4, #12]
 8001084:	bd10      	pop	{r4, pc}

08001086 <__sclose>:
 8001086:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800108a:	f000 b8db 	b.w	8001244 <_close_r>
	...

08001090 <__swbuf_r>:
 8001090:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001092:	460e      	mov	r6, r1
 8001094:	4614      	mov	r4, r2
 8001096:	4605      	mov	r5, r0
 8001098:	b118      	cbz	r0, 80010a2 <__swbuf_r+0x12>
 800109a:	6983      	ldr	r3, [r0, #24]
 800109c:	b90b      	cbnz	r3, 80010a2 <__swbuf_r+0x12>
 800109e:	f7ff fb0d 	bl	80006bc <__sinit>
 80010a2:	4b21      	ldr	r3, [pc, #132]	; (8001128 <__swbuf_r+0x98>)
 80010a4:	429c      	cmp	r4, r3
 80010a6:	d12b      	bne.n	8001100 <__swbuf_r+0x70>
 80010a8:	686c      	ldr	r4, [r5, #4]
 80010aa:	69a3      	ldr	r3, [r4, #24]
 80010ac:	60a3      	str	r3, [r4, #8]
 80010ae:	89a3      	ldrh	r3, [r4, #12]
 80010b0:	071a      	lsls	r2, r3, #28
 80010b2:	d52f      	bpl.n	8001114 <__swbuf_r+0x84>
 80010b4:	6923      	ldr	r3, [r4, #16]
 80010b6:	b36b      	cbz	r3, 8001114 <__swbuf_r+0x84>
 80010b8:	6923      	ldr	r3, [r4, #16]
 80010ba:	6820      	ldr	r0, [r4, #0]
 80010bc:	b2f6      	uxtb	r6, r6
 80010be:	1ac0      	subs	r0, r0, r3
 80010c0:	6963      	ldr	r3, [r4, #20]
 80010c2:	4637      	mov	r7, r6
 80010c4:	4283      	cmp	r3, r0
 80010c6:	dc04      	bgt.n	80010d2 <__swbuf_r+0x42>
 80010c8:	4621      	mov	r1, r4
 80010ca:	4628      	mov	r0, r5
 80010cc:	f000 f950 	bl	8001370 <_fflush_r>
 80010d0:	bb30      	cbnz	r0, 8001120 <__swbuf_r+0x90>
 80010d2:	68a3      	ldr	r3, [r4, #8]
 80010d4:	3001      	adds	r0, #1
 80010d6:	3b01      	subs	r3, #1
 80010d8:	60a3      	str	r3, [r4, #8]
 80010da:	6823      	ldr	r3, [r4, #0]
 80010dc:	1c5a      	adds	r2, r3, #1
 80010de:	6022      	str	r2, [r4, #0]
 80010e0:	701e      	strb	r6, [r3, #0]
 80010e2:	6963      	ldr	r3, [r4, #20]
 80010e4:	4283      	cmp	r3, r0
 80010e6:	d004      	beq.n	80010f2 <__swbuf_r+0x62>
 80010e8:	89a3      	ldrh	r3, [r4, #12]
 80010ea:	07db      	lsls	r3, r3, #31
 80010ec:	d506      	bpl.n	80010fc <__swbuf_r+0x6c>
 80010ee:	2e0a      	cmp	r6, #10
 80010f0:	d104      	bne.n	80010fc <__swbuf_r+0x6c>
 80010f2:	4621      	mov	r1, r4
 80010f4:	4628      	mov	r0, r5
 80010f6:	f000 f93b 	bl	8001370 <_fflush_r>
 80010fa:	b988      	cbnz	r0, 8001120 <__swbuf_r+0x90>
 80010fc:	4638      	mov	r0, r7
 80010fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001100:	4b0a      	ldr	r3, [pc, #40]	; (800112c <__swbuf_r+0x9c>)
 8001102:	429c      	cmp	r4, r3
 8001104:	d101      	bne.n	800110a <__swbuf_r+0x7a>
 8001106:	68ac      	ldr	r4, [r5, #8]
 8001108:	e7cf      	b.n	80010aa <__swbuf_r+0x1a>
 800110a:	4b09      	ldr	r3, [pc, #36]	; (8001130 <__swbuf_r+0xa0>)
 800110c:	429c      	cmp	r4, r3
 800110e:	bf08      	it	eq
 8001110:	68ec      	ldreq	r4, [r5, #12]
 8001112:	e7ca      	b.n	80010aa <__swbuf_r+0x1a>
 8001114:	4621      	mov	r1, r4
 8001116:	4628      	mov	r0, r5
 8001118:	f000 f81e 	bl	8001158 <__swsetup_r>
 800111c:	2800      	cmp	r0, #0
 800111e:	d0cb      	beq.n	80010b8 <__swbuf_r+0x28>
 8001120:	f04f 37ff 	mov.w	r7, #4294967295
 8001124:	e7ea      	b.n	80010fc <__swbuf_r+0x6c>
 8001126:	bf00      	nop
 8001128:	08001d00 	.word	0x08001d00
 800112c:	08001d20 	.word	0x08001d20
 8001130:	08001ce0 	.word	0x08001ce0

08001134 <_write_r>:
 8001134:	b538      	push	{r3, r4, r5, lr}
 8001136:	4604      	mov	r4, r0
 8001138:	4608      	mov	r0, r1
 800113a:	4611      	mov	r1, r2
 800113c:	2200      	movs	r2, #0
 800113e:	4d05      	ldr	r5, [pc, #20]	; (8001154 <_write_r+0x20>)
 8001140:	602a      	str	r2, [r5, #0]
 8001142:	461a      	mov	r2, r3
 8001144:	f000 fb08 	bl	8001758 <_write>
 8001148:	1c43      	adds	r3, r0, #1
 800114a:	d102      	bne.n	8001152 <_write_r+0x1e>
 800114c:	682b      	ldr	r3, [r5, #0]
 800114e:	b103      	cbz	r3, 8001152 <_write_r+0x1e>
 8001150:	6023      	str	r3, [r4, #0]
 8001152:	bd38      	pop	{r3, r4, r5, pc}
 8001154:	20000194 	.word	0x20000194

08001158 <__swsetup_r>:
 8001158:	4b32      	ldr	r3, [pc, #200]	; (8001224 <__swsetup_r+0xcc>)
 800115a:	b570      	push	{r4, r5, r6, lr}
 800115c:	681d      	ldr	r5, [r3, #0]
 800115e:	4606      	mov	r6, r0
 8001160:	460c      	mov	r4, r1
 8001162:	b125      	cbz	r5, 800116e <__swsetup_r+0x16>
 8001164:	69ab      	ldr	r3, [r5, #24]
 8001166:	b913      	cbnz	r3, 800116e <__swsetup_r+0x16>
 8001168:	4628      	mov	r0, r5
 800116a:	f7ff faa7 	bl	80006bc <__sinit>
 800116e:	4b2e      	ldr	r3, [pc, #184]	; (8001228 <__swsetup_r+0xd0>)
 8001170:	429c      	cmp	r4, r3
 8001172:	d10f      	bne.n	8001194 <__swsetup_r+0x3c>
 8001174:	686c      	ldr	r4, [r5, #4]
 8001176:	89a3      	ldrh	r3, [r4, #12]
 8001178:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800117c:	0719      	lsls	r1, r3, #28
 800117e:	d42c      	bmi.n	80011da <__swsetup_r+0x82>
 8001180:	06dd      	lsls	r5, r3, #27
 8001182:	d411      	bmi.n	80011a8 <__swsetup_r+0x50>
 8001184:	2309      	movs	r3, #9
 8001186:	6033      	str	r3, [r6, #0]
 8001188:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800118c:	f04f 30ff 	mov.w	r0, #4294967295
 8001190:	81a3      	strh	r3, [r4, #12]
 8001192:	e03e      	b.n	8001212 <__swsetup_r+0xba>
 8001194:	4b25      	ldr	r3, [pc, #148]	; (800122c <__swsetup_r+0xd4>)
 8001196:	429c      	cmp	r4, r3
 8001198:	d101      	bne.n	800119e <__swsetup_r+0x46>
 800119a:	68ac      	ldr	r4, [r5, #8]
 800119c:	e7eb      	b.n	8001176 <__swsetup_r+0x1e>
 800119e:	4b24      	ldr	r3, [pc, #144]	; (8001230 <__swsetup_r+0xd8>)
 80011a0:	429c      	cmp	r4, r3
 80011a2:	bf08      	it	eq
 80011a4:	68ec      	ldreq	r4, [r5, #12]
 80011a6:	e7e6      	b.n	8001176 <__swsetup_r+0x1e>
 80011a8:	0758      	lsls	r0, r3, #29
 80011aa:	d512      	bpl.n	80011d2 <__swsetup_r+0x7a>
 80011ac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011ae:	b141      	cbz	r1, 80011c2 <__swsetup_r+0x6a>
 80011b0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011b4:	4299      	cmp	r1, r3
 80011b6:	d002      	beq.n	80011be <__swsetup_r+0x66>
 80011b8:	4630      	mov	r0, r6
 80011ba:	f7ff fb39 	bl	8000830 <_free_r>
 80011be:	2300      	movs	r3, #0
 80011c0:	6363      	str	r3, [r4, #52]	; 0x34
 80011c2:	89a3      	ldrh	r3, [r4, #12]
 80011c4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80011c8:	81a3      	strh	r3, [r4, #12]
 80011ca:	2300      	movs	r3, #0
 80011cc:	6063      	str	r3, [r4, #4]
 80011ce:	6923      	ldr	r3, [r4, #16]
 80011d0:	6023      	str	r3, [r4, #0]
 80011d2:	89a3      	ldrh	r3, [r4, #12]
 80011d4:	f043 0308 	orr.w	r3, r3, #8
 80011d8:	81a3      	strh	r3, [r4, #12]
 80011da:	6923      	ldr	r3, [r4, #16]
 80011dc:	b94b      	cbnz	r3, 80011f2 <__swsetup_r+0x9a>
 80011de:	89a3      	ldrh	r3, [r4, #12]
 80011e0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011e4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80011e8:	d003      	beq.n	80011f2 <__swsetup_r+0x9a>
 80011ea:	4621      	mov	r1, r4
 80011ec:	4630      	mov	r0, r6
 80011ee:	f000 f931 	bl	8001454 <__smakebuf_r>
 80011f2:	89a0      	ldrh	r0, [r4, #12]
 80011f4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011f8:	f010 0301 	ands.w	r3, r0, #1
 80011fc:	d00a      	beq.n	8001214 <__swsetup_r+0xbc>
 80011fe:	2300      	movs	r3, #0
 8001200:	60a3      	str	r3, [r4, #8]
 8001202:	6963      	ldr	r3, [r4, #20]
 8001204:	425b      	negs	r3, r3
 8001206:	61a3      	str	r3, [r4, #24]
 8001208:	6923      	ldr	r3, [r4, #16]
 800120a:	b943      	cbnz	r3, 800121e <__swsetup_r+0xc6>
 800120c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001210:	d1ba      	bne.n	8001188 <__swsetup_r+0x30>
 8001212:	bd70      	pop	{r4, r5, r6, pc}
 8001214:	0781      	lsls	r1, r0, #30
 8001216:	bf58      	it	pl
 8001218:	6963      	ldrpl	r3, [r4, #20]
 800121a:	60a3      	str	r3, [r4, #8]
 800121c:	e7f4      	b.n	8001208 <__swsetup_r+0xb0>
 800121e:	2000      	movs	r0, #0
 8001220:	e7f7      	b.n	8001212 <__swsetup_r+0xba>
 8001222:	bf00      	nop
 8001224:	20000048 	.word	0x20000048
 8001228:	08001d00 	.word	0x08001d00
 800122c:	08001d20 	.word	0x08001d20
 8001230:	08001ce0 	.word	0x08001ce0

08001234 <abort>:
 8001234:	2006      	movs	r0, #6
 8001236:	b508      	push	{r3, lr}
 8001238:	f000 f9a0 	bl	800157c <raise>
 800123c:	2001      	movs	r0, #1
 800123e:	f000 fc8f 	bl	8001b60 <_exit>
	...

08001244 <_close_r>:
 8001244:	b538      	push	{r3, r4, r5, lr}
 8001246:	2300      	movs	r3, #0
 8001248:	4d05      	ldr	r5, [pc, #20]	; (8001260 <_close_r+0x1c>)
 800124a:	4604      	mov	r4, r0
 800124c:	4608      	mov	r0, r1
 800124e:	602b      	str	r3, [r5, #0]
 8001250:	f000 fab0 	bl	80017b4 <_close>
 8001254:	1c43      	adds	r3, r0, #1
 8001256:	d102      	bne.n	800125e <_close_r+0x1a>
 8001258:	682b      	ldr	r3, [r5, #0]
 800125a:	b103      	cbz	r3, 800125e <_close_r+0x1a>
 800125c:	6023      	str	r3, [r4, #0]
 800125e:	bd38      	pop	{r3, r4, r5, pc}
 8001260:	20000194 	.word	0x20000194

08001264 <__sflush_r>:
 8001264:	898a      	ldrh	r2, [r1, #12]
 8001266:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800126a:	4605      	mov	r5, r0
 800126c:	0710      	lsls	r0, r2, #28
 800126e:	460c      	mov	r4, r1
 8001270:	d458      	bmi.n	8001324 <__sflush_r+0xc0>
 8001272:	684b      	ldr	r3, [r1, #4]
 8001274:	2b00      	cmp	r3, #0
 8001276:	dc05      	bgt.n	8001284 <__sflush_r+0x20>
 8001278:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800127a:	2b00      	cmp	r3, #0
 800127c:	dc02      	bgt.n	8001284 <__sflush_r+0x20>
 800127e:	2000      	movs	r0, #0
 8001280:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001284:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001286:	2e00      	cmp	r6, #0
 8001288:	d0f9      	beq.n	800127e <__sflush_r+0x1a>
 800128a:	2300      	movs	r3, #0
 800128c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001290:	682f      	ldr	r7, [r5, #0]
 8001292:	602b      	str	r3, [r5, #0]
 8001294:	d032      	beq.n	80012fc <__sflush_r+0x98>
 8001296:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001298:	89a3      	ldrh	r3, [r4, #12]
 800129a:	075a      	lsls	r2, r3, #29
 800129c:	d505      	bpl.n	80012aa <__sflush_r+0x46>
 800129e:	6863      	ldr	r3, [r4, #4]
 80012a0:	1ac0      	subs	r0, r0, r3
 80012a2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80012a4:	b10b      	cbz	r3, 80012aa <__sflush_r+0x46>
 80012a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80012a8:	1ac0      	subs	r0, r0, r3
 80012aa:	2300      	movs	r3, #0
 80012ac:	4602      	mov	r2, r0
 80012ae:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80012b0:	4628      	mov	r0, r5
 80012b2:	6a21      	ldr	r1, [r4, #32]
 80012b4:	47b0      	blx	r6
 80012b6:	1c43      	adds	r3, r0, #1
 80012b8:	89a3      	ldrh	r3, [r4, #12]
 80012ba:	d106      	bne.n	80012ca <__sflush_r+0x66>
 80012bc:	6829      	ldr	r1, [r5, #0]
 80012be:	291d      	cmp	r1, #29
 80012c0:	d82c      	bhi.n	800131c <__sflush_r+0xb8>
 80012c2:	4a2a      	ldr	r2, [pc, #168]	; (800136c <__sflush_r+0x108>)
 80012c4:	40ca      	lsrs	r2, r1
 80012c6:	07d6      	lsls	r6, r2, #31
 80012c8:	d528      	bpl.n	800131c <__sflush_r+0xb8>
 80012ca:	2200      	movs	r2, #0
 80012cc:	6062      	str	r2, [r4, #4]
 80012ce:	6922      	ldr	r2, [r4, #16]
 80012d0:	04d9      	lsls	r1, r3, #19
 80012d2:	6022      	str	r2, [r4, #0]
 80012d4:	d504      	bpl.n	80012e0 <__sflush_r+0x7c>
 80012d6:	1c42      	adds	r2, r0, #1
 80012d8:	d101      	bne.n	80012de <__sflush_r+0x7a>
 80012da:	682b      	ldr	r3, [r5, #0]
 80012dc:	b903      	cbnz	r3, 80012e0 <__sflush_r+0x7c>
 80012de:	6560      	str	r0, [r4, #84]	; 0x54
 80012e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012e2:	602f      	str	r7, [r5, #0]
 80012e4:	2900      	cmp	r1, #0
 80012e6:	d0ca      	beq.n	800127e <__sflush_r+0x1a>
 80012e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80012ec:	4299      	cmp	r1, r3
 80012ee:	d002      	beq.n	80012f6 <__sflush_r+0x92>
 80012f0:	4628      	mov	r0, r5
 80012f2:	f7ff fa9d 	bl	8000830 <_free_r>
 80012f6:	2000      	movs	r0, #0
 80012f8:	6360      	str	r0, [r4, #52]	; 0x34
 80012fa:	e7c1      	b.n	8001280 <__sflush_r+0x1c>
 80012fc:	6a21      	ldr	r1, [r4, #32]
 80012fe:	2301      	movs	r3, #1
 8001300:	4628      	mov	r0, r5
 8001302:	47b0      	blx	r6
 8001304:	1c41      	adds	r1, r0, #1
 8001306:	d1c7      	bne.n	8001298 <__sflush_r+0x34>
 8001308:	682b      	ldr	r3, [r5, #0]
 800130a:	2b00      	cmp	r3, #0
 800130c:	d0c4      	beq.n	8001298 <__sflush_r+0x34>
 800130e:	2b1d      	cmp	r3, #29
 8001310:	d001      	beq.n	8001316 <__sflush_r+0xb2>
 8001312:	2b16      	cmp	r3, #22
 8001314:	d101      	bne.n	800131a <__sflush_r+0xb6>
 8001316:	602f      	str	r7, [r5, #0]
 8001318:	e7b1      	b.n	800127e <__sflush_r+0x1a>
 800131a:	89a3      	ldrh	r3, [r4, #12]
 800131c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001320:	81a3      	strh	r3, [r4, #12]
 8001322:	e7ad      	b.n	8001280 <__sflush_r+0x1c>
 8001324:	690f      	ldr	r7, [r1, #16]
 8001326:	2f00      	cmp	r7, #0
 8001328:	d0a9      	beq.n	800127e <__sflush_r+0x1a>
 800132a:	0793      	lsls	r3, r2, #30
 800132c:	bf18      	it	ne
 800132e:	2300      	movne	r3, #0
 8001330:	680e      	ldr	r6, [r1, #0]
 8001332:	bf08      	it	eq
 8001334:	694b      	ldreq	r3, [r1, #20]
 8001336:	eba6 0807 	sub.w	r8, r6, r7
 800133a:	600f      	str	r7, [r1, #0]
 800133c:	608b      	str	r3, [r1, #8]
 800133e:	f1b8 0f00 	cmp.w	r8, #0
 8001342:	dd9c      	ble.n	800127e <__sflush_r+0x1a>
 8001344:	4643      	mov	r3, r8
 8001346:	463a      	mov	r2, r7
 8001348:	4628      	mov	r0, r5
 800134a:	6a21      	ldr	r1, [r4, #32]
 800134c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800134e:	47b0      	blx	r6
 8001350:	2800      	cmp	r0, #0
 8001352:	dc06      	bgt.n	8001362 <__sflush_r+0xfe>
 8001354:	89a3      	ldrh	r3, [r4, #12]
 8001356:	f04f 30ff 	mov.w	r0, #4294967295
 800135a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800135e:	81a3      	strh	r3, [r4, #12]
 8001360:	e78e      	b.n	8001280 <__sflush_r+0x1c>
 8001362:	4407      	add	r7, r0
 8001364:	eba8 0800 	sub.w	r8, r8, r0
 8001368:	e7e9      	b.n	800133e <__sflush_r+0xda>
 800136a:	bf00      	nop
 800136c:	20400001 	.word	0x20400001

08001370 <_fflush_r>:
 8001370:	b538      	push	{r3, r4, r5, lr}
 8001372:	690b      	ldr	r3, [r1, #16]
 8001374:	4605      	mov	r5, r0
 8001376:	460c      	mov	r4, r1
 8001378:	b913      	cbnz	r3, 8001380 <_fflush_r+0x10>
 800137a:	2500      	movs	r5, #0
 800137c:	4628      	mov	r0, r5
 800137e:	bd38      	pop	{r3, r4, r5, pc}
 8001380:	b118      	cbz	r0, 800138a <_fflush_r+0x1a>
 8001382:	6983      	ldr	r3, [r0, #24]
 8001384:	b90b      	cbnz	r3, 800138a <_fflush_r+0x1a>
 8001386:	f7ff f999 	bl	80006bc <__sinit>
 800138a:	4b14      	ldr	r3, [pc, #80]	; (80013dc <_fflush_r+0x6c>)
 800138c:	429c      	cmp	r4, r3
 800138e:	d11b      	bne.n	80013c8 <_fflush_r+0x58>
 8001390:	686c      	ldr	r4, [r5, #4]
 8001392:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001396:	2b00      	cmp	r3, #0
 8001398:	d0ef      	beq.n	800137a <_fflush_r+0xa>
 800139a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800139c:	07d0      	lsls	r0, r2, #31
 800139e:	d404      	bmi.n	80013aa <_fflush_r+0x3a>
 80013a0:	0599      	lsls	r1, r3, #22
 80013a2:	d402      	bmi.n	80013aa <_fflush_r+0x3a>
 80013a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80013a6:	f7ff fa39 	bl	800081c <__retarget_lock_acquire_recursive>
 80013aa:	4628      	mov	r0, r5
 80013ac:	4621      	mov	r1, r4
 80013ae:	f7ff ff59 	bl	8001264 <__sflush_r>
 80013b2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80013b4:	4605      	mov	r5, r0
 80013b6:	07da      	lsls	r2, r3, #31
 80013b8:	d4e0      	bmi.n	800137c <_fflush_r+0xc>
 80013ba:	89a3      	ldrh	r3, [r4, #12]
 80013bc:	059b      	lsls	r3, r3, #22
 80013be:	d4dd      	bmi.n	800137c <_fflush_r+0xc>
 80013c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80013c2:	f7ff fa2c 	bl	800081e <__retarget_lock_release_recursive>
 80013c6:	e7d9      	b.n	800137c <_fflush_r+0xc>
 80013c8:	4b05      	ldr	r3, [pc, #20]	; (80013e0 <_fflush_r+0x70>)
 80013ca:	429c      	cmp	r4, r3
 80013cc:	d101      	bne.n	80013d2 <_fflush_r+0x62>
 80013ce:	68ac      	ldr	r4, [r5, #8]
 80013d0:	e7df      	b.n	8001392 <_fflush_r+0x22>
 80013d2:	4b04      	ldr	r3, [pc, #16]	; (80013e4 <_fflush_r+0x74>)
 80013d4:	429c      	cmp	r4, r3
 80013d6:	bf08      	it	eq
 80013d8:	68ec      	ldreq	r4, [r5, #12]
 80013da:	e7da      	b.n	8001392 <_fflush_r+0x22>
 80013dc:	08001d00 	.word	0x08001d00
 80013e0:	08001d20 	.word	0x08001d20
 80013e4:	08001ce0 	.word	0x08001ce0

080013e8 <_lseek_r>:
 80013e8:	b538      	push	{r3, r4, r5, lr}
 80013ea:	4604      	mov	r4, r0
 80013ec:	4608      	mov	r0, r1
 80013ee:	4611      	mov	r1, r2
 80013f0:	2200      	movs	r2, #0
 80013f2:	4d05      	ldr	r5, [pc, #20]	; (8001408 <_lseek_r+0x20>)
 80013f4:	602a      	str	r2, [r5, #0]
 80013f6:	461a      	mov	r2, r3
 80013f8:	f000 f99c 	bl	8001734 <_lseek>
 80013fc:	1c43      	adds	r3, r0, #1
 80013fe:	d102      	bne.n	8001406 <_lseek_r+0x1e>
 8001400:	682b      	ldr	r3, [r5, #0]
 8001402:	b103      	cbz	r3, 8001406 <_lseek_r+0x1e>
 8001404:	6023      	str	r3, [r4, #0]
 8001406:	bd38      	pop	{r3, r4, r5, pc}
 8001408:	20000194 	.word	0x20000194

0800140c <__swhatbuf_r>:
 800140c:	b570      	push	{r4, r5, r6, lr}
 800140e:	460e      	mov	r6, r1
 8001410:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001414:	4614      	mov	r4, r2
 8001416:	2900      	cmp	r1, #0
 8001418:	461d      	mov	r5, r3
 800141a:	b096      	sub	sp, #88	; 0x58
 800141c:	da07      	bge.n	800142e <__swhatbuf_r+0x22>
 800141e:	2300      	movs	r3, #0
 8001420:	602b      	str	r3, [r5, #0]
 8001422:	89b3      	ldrh	r3, [r6, #12]
 8001424:	061a      	lsls	r2, r3, #24
 8001426:	d410      	bmi.n	800144a <__swhatbuf_r+0x3e>
 8001428:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800142c:	e00e      	b.n	800144c <__swhatbuf_r+0x40>
 800142e:	466a      	mov	r2, sp
 8001430:	f000 f8c0 	bl	80015b4 <_fstat_r>
 8001434:	2800      	cmp	r0, #0
 8001436:	dbf2      	blt.n	800141e <__swhatbuf_r+0x12>
 8001438:	9a01      	ldr	r2, [sp, #4]
 800143a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800143e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001442:	425a      	negs	r2, r3
 8001444:	415a      	adcs	r2, r3
 8001446:	602a      	str	r2, [r5, #0]
 8001448:	e7ee      	b.n	8001428 <__swhatbuf_r+0x1c>
 800144a:	2340      	movs	r3, #64	; 0x40
 800144c:	2000      	movs	r0, #0
 800144e:	6023      	str	r3, [r4, #0]
 8001450:	b016      	add	sp, #88	; 0x58
 8001452:	bd70      	pop	{r4, r5, r6, pc}

08001454 <__smakebuf_r>:
 8001454:	898b      	ldrh	r3, [r1, #12]
 8001456:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001458:	079d      	lsls	r5, r3, #30
 800145a:	4606      	mov	r6, r0
 800145c:	460c      	mov	r4, r1
 800145e:	d507      	bpl.n	8001470 <__smakebuf_r+0x1c>
 8001460:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001464:	6023      	str	r3, [r4, #0]
 8001466:	6123      	str	r3, [r4, #16]
 8001468:	2301      	movs	r3, #1
 800146a:	6163      	str	r3, [r4, #20]
 800146c:	b002      	add	sp, #8
 800146e:	bd70      	pop	{r4, r5, r6, pc}
 8001470:	466a      	mov	r2, sp
 8001472:	ab01      	add	r3, sp, #4
 8001474:	f7ff ffca 	bl	800140c <__swhatbuf_r>
 8001478:	9900      	ldr	r1, [sp, #0]
 800147a:	4605      	mov	r5, r0
 800147c:	4630      	mov	r0, r6
 800147e:	f7ff fa23 	bl	80008c8 <_malloc_r>
 8001482:	b948      	cbnz	r0, 8001498 <__smakebuf_r+0x44>
 8001484:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001488:	059a      	lsls	r2, r3, #22
 800148a:	d4ef      	bmi.n	800146c <__smakebuf_r+0x18>
 800148c:	f023 0303 	bic.w	r3, r3, #3
 8001490:	f043 0302 	orr.w	r3, r3, #2
 8001494:	81a3      	strh	r3, [r4, #12]
 8001496:	e7e3      	b.n	8001460 <__smakebuf_r+0xc>
 8001498:	4b0d      	ldr	r3, [pc, #52]	; (80014d0 <__smakebuf_r+0x7c>)
 800149a:	62b3      	str	r3, [r6, #40]	; 0x28
 800149c:	89a3      	ldrh	r3, [r4, #12]
 800149e:	6020      	str	r0, [r4, #0]
 80014a0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80014a4:	81a3      	strh	r3, [r4, #12]
 80014a6:	9b00      	ldr	r3, [sp, #0]
 80014a8:	6120      	str	r0, [r4, #16]
 80014aa:	6163      	str	r3, [r4, #20]
 80014ac:	9b01      	ldr	r3, [sp, #4]
 80014ae:	b15b      	cbz	r3, 80014c8 <__smakebuf_r+0x74>
 80014b0:	4630      	mov	r0, r6
 80014b2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014b6:	f000 f88f 	bl	80015d8 <_isatty_r>
 80014ba:	b128      	cbz	r0, 80014c8 <__smakebuf_r+0x74>
 80014bc:	89a3      	ldrh	r3, [r4, #12]
 80014be:	f023 0303 	bic.w	r3, r3, #3
 80014c2:	f043 0301 	orr.w	r3, r3, #1
 80014c6:	81a3      	strh	r3, [r4, #12]
 80014c8:	89a0      	ldrh	r0, [r4, #12]
 80014ca:	4305      	orrs	r5, r0
 80014cc:	81a5      	strh	r5, [r4, #12]
 80014ce:	e7cd      	b.n	800146c <__smakebuf_r+0x18>
 80014d0:	08000655 	.word	0x08000655

080014d4 <memchr>:
 80014d4:	4603      	mov	r3, r0
 80014d6:	b510      	push	{r4, lr}
 80014d8:	b2c9      	uxtb	r1, r1
 80014da:	4402      	add	r2, r0
 80014dc:	4293      	cmp	r3, r2
 80014de:	4618      	mov	r0, r3
 80014e0:	d101      	bne.n	80014e6 <memchr+0x12>
 80014e2:	2000      	movs	r0, #0
 80014e4:	e003      	b.n	80014ee <memchr+0x1a>
 80014e6:	7804      	ldrb	r4, [r0, #0]
 80014e8:	3301      	adds	r3, #1
 80014ea:	428c      	cmp	r4, r1
 80014ec:	d1f6      	bne.n	80014dc <memchr+0x8>
 80014ee:	bd10      	pop	{r4, pc}

080014f0 <__malloc_lock>:
 80014f0:	4801      	ldr	r0, [pc, #4]	; (80014f8 <__malloc_lock+0x8>)
 80014f2:	f7ff b993 	b.w	800081c <__retarget_lock_acquire_recursive>
 80014f6:	bf00      	nop
 80014f8:	2000018c 	.word	0x2000018c

080014fc <__malloc_unlock>:
 80014fc:	4801      	ldr	r0, [pc, #4]	; (8001504 <__malloc_unlock+0x8>)
 80014fe:	f7ff b98e 	b.w	800081e <__retarget_lock_release_recursive>
 8001502:	bf00      	nop
 8001504:	2000018c 	.word	0x2000018c

08001508 <_read_r>:
 8001508:	b538      	push	{r3, r4, r5, lr}
 800150a:	4604      	mov	r4, r0
 800150c:	4608      	mov	r0, r1
 800150e:	4611      	mov	r1, r2
 8001510:	2200      	movs	r2, #0
 8001512:	4d05      	ldr	r5, [pc, #20]	; (8001528 <_read_r+0x20>)
 8001514:	602a      	str	r2, [r5, #0]
 8001516:	461a      	mov	r2, r3
 8001518:	f000 f8b6 	bl	8001688 <_read>
 800151c:	1c43      	adds	r3, r0, #1
 800151e:	d102      	bne.n	8001526 <_read_r+0x1e>
 8001520:	682b      	ldr	r3, [r5, #0]
 8001522:	b103      	cbz	r3, 8001526 <_read_r+0x1e>
 8001524:	6023      	str	r3, [r4, #0]
 8001526:	bd38      	pop	{r3, r4, r5, pc}
 8001528:	20000194 	.word	0x20000194

0800152c <_raise_r>:
 800152c:	291f      	cmp	r1, #31
 800152e:	b538      	push	{r3, r4, r5, lr}
 8001530:	4604      	mov	r4, r0
 8001532:	460d      	mov	r5, r1
 8001534:	d904      	bls.n	8001540 <_raise_r+0x14>
 8001536:	2316      	movs	r3, #22
 8001538:	6003      	str	r3, [r0, #0]
 800153a:	f04f 30ff 	mov.w	r0, #4294967295
 800153e:	bd38      	pop	{r3, r4, r5, pc}
 8001540:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8001542:	b112      	cbz	r2, 800154a <_raise_r+0x1e>
 8001544:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8001548:	b94b      	cbnz	r3, 800155e <_raise_r+0x32>
 800154a:	4620      	mov	r0, r4
 800154c:	f000 f830 	bl	80015b0 <_getpid_r>
 8001550:	462a      	mov	r2, r5
 8001552:	4601      	mov	r1, r0
 8001554:	4620      	mov	r0, r4
 8001556:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800155a:	f000 b817 	b.w	800158c <_kill_r>
 800155e:	2b01      	cmp	r3, #1
 8001560:	d00a      	beq.n	8001578 <_raise_r+0x4c>
 8001562:	1c59      	adds	r1, r3, #1
 8001564:	d103      	bne.n	800156e <_raise_r+0x42>
 8001566:	2316      	movs	r3, #22
 8001568:	6003      	str	r3, [r0, #0]
 800156a:	2001      	movs	r0, #1
 800156c:	e7e7      	b.n	800153e <_raise_r+0x12>
 800156e:	2400      	movs	r4, #0
 8001570:	4628      	mov	r0, r5
 8001572:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8001576:	4798      	blx	r3
 8001578:	2000      	movs	r0, #0
 800157a:	e7e0      	b.n	800153e <_raise_r+0x12>

0800157c <raise>:
 800157c:	4b02      	ldr	r3, [pc, #8]	; (8001588 <raise+0xc>)
 800157e:	4601      	mov	r1, r0
 8001580:	6818      	ldr	r0, [r3, #0]
 8001582:	f7ff bfd3 	b.w	800152c <_raise_r>
 8001586:	bf00      	nop
 8001588:	20000048 	.word	0x20000048

0800158c <_kill_r>:
 800158c:	b538      	push	{r3, r4, r5, lr}
 800158e:	2300      	movs	r3, #0
 8001590:	4d06      	ldr	r5, [pc, #24]	; (80015ac <_kill_r+0x20>)
 8001592:	4604      	mov	r4, r0
 8001594:	4608      	mov	r0, r1
 8001596:	4611      	mov	r1, r2
 8001598:	602b      	str	r3, [r5, #0]
 800159a:	f000 faff 	bl	8001b9c <_kill>
 800159e:	1c43      	adds	r3, r0, #1
 80015a0:	d102      	bne.n	80015a8 <_kill_r+0x1c>
 80015a2:	682b      	ldr	r3, [r5, #0]
 80015a4:	b103      	cbz	r3, 80015a8 <_kill_r+0x1c>
 80015a6:	6023      	str	r3, [r4, #0]
 80015a8:	bd38      	pop	{r3, r4, r5, pc}
 80015aa:	bf00      	nop
 80015ac:	20000194 	.word	0x20000194

080015b0 <_getpid_r>:
 80015b0:	f000 b926 	b.w	8001800 <_getpid>

080015b4 <_fstat_r>:
 80015b4:	b538      	push	{r3, r4, r5, lr}
 80015b6:	2300      	movs	r3, #0
 80015b8:	4d06      	ldr	r5, [pc, #24]	; (80015d4 <_fstat_r+0x20>)
 80015ba:	4604      	mov	r4, r0
 80015bc:	4608      	mov	r0, r1
 80015be:	4611      	mov	r1, r2
 80015c0:	602b      	str	r3, [r5, #0]
 80015c2:	f000 f940 	bl	8001846 <_fstat>
 80015c6:	1c43      	adds	r3, r0, #1
 80015c8:	d102      	bne.n	80015d0 <_fstat_r+0x1c>
 80015ca:	682b      	ldr	r3, [r5, #0]
 80015cc:	b103      	cbz	r3, 80015d0 <_fstat_r+0x1c>
 80015ce:	6023      	str	r3, [r4, #0]
 80015d0:	bd38      	pop	{r3, r4, r5, pc}
 80015d2:	bf00      	nop
 80015d4:	20000194 	.word	0x20000194

080015d8 <_isatty_r>:
 80015d8:	b538      	push	{r3, r4, r5, lr}
 80015da:	2300      	movs	r3, #0
 80015dc:	4d05      	ldr	r5, [pc, #20]	; (80015f4 <_isatty_r+0x1c>)
 80015de:	4604      	mov	r4, r0
 80015e0:	4608      	mov	r0, r1
 80015e2:	602b      	str	r3, [r5, #0]
 80015e4:	f000 faa0 	bl	8001b28 <_isatty>
 80015e8:	1c43      	adds	r3, r0, #1
 80015ea:	d102      	bne.n	80015f2 <_isatty_r+0x1a>
 80015ec:	682b      	ldr	r3, [r5, #0]
 80015ee:	b103      	cbz	r3, 80015f2 <_isatty_r+0x1a>
 80015f0:	6023      	str	r3, [r4, #0]
 80015f2:	bd38      	pop	{r3, r4, r5, pc}
 80015f4:	20000194 	.word	0x20000194

080015f8 <findslot>:
 80015f8:	4b0a      	ldr	r3, [pc, #40]	; (8001624 <findslot+0x2c>)
 80015fa:	b510      	push	{r4, lr}
 80015fc:	4604      	mov	r4, r0
 80015fe:	6818      	ldr	r0, [r3, #0]
 8001600:	b118      	cbz	r0, 800160a <findslot+0x12>
 8001602:	6983      	ldr	r3, [r0, #24]
 8001604:	b90b      	cbnz	r3, 800160a <findslot+0x12>
 8001606:	f7ff f859 	bl	80006bc <__sinit>
 800160a:	2c13      	cmp	r4, #19
 800160c:	d807      	bhi.n	800161e <findslot+0x26>
 800160e:	4806      	ldr	r0, [pc, #24]	; (8001628 <findslot+0x30>)
 8001610:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8001614:	3201      	adds	r2, #1
 8001616:	d002      	beq.n	800161e <findslot+0x26>
 8001618:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 800161c:	bd10      	pop	{r4, pc}
 800161e:	2000      	movs	r0, #0
 8001620:	e7fc      	b.n	800161c <findslot+0x24>
 8001622:	bf00      	nop
 8001624:	20000048 	.word	0x20000048
 8001628:	200000e8 	.word	0x200000e8

0800162c <checkerror>:
 800162c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800162e:	1c43      	adds	r3, r0, #1
 8001630:	4604      	mov	r4, r0
 8001632:	d109      	bne.n	8001648 <checkerror+0x1c>
 8001634:	f7fe ff2e 	bl	8000494 <__errno>
 8001638:	2613      	movs	r6, #19
 800163a:	4605      	mov	r5, r0
 800163c:	2700      	movs	r7, #0
 800163e:	4630      	mov	r0, r6
 8001640:	4639      	mov	r1, r7
 8001642:	beab      	bkpt	0x00ab
 8001644:	4606      	mov	r6, r0
 8001646:	602e      	str	r6, [r5, #0]
 8001648:	4620      	mov	r0, r4
 800164a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800164c <error>:
 800164c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800164e:	4604      	mov	r4, r0
 8001650:	f7fe ff20 	bl	8000494 <__errno>
 8001654:	2613      	movs	r6, #19
 8001656:	4605      	mov	r5, r0
 8001658:	2700      	movs	r7, #0
 800165a:	4630      	mov	r0, r6
 800165c:	4639      	mov	r1, r7
 800165e:	beab      	bkpt	0x00ab
 8001660:	4606      	mov	r6, r0
 8001662:	4620      	mov	r0, r4
 8001664:	602e      	str	r6, [r5, #0]
 8001666:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001668 <_swiread>:
 8001668:	b530      	push	{r4, r5, lr}
 800166a:	b085      	sub	sp, #20
 800166c:	2406      	movs	r4, #6
 800166e:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001672:	9203      	str	r2, [sp, #12]
 8001674:	ad01      	add	r5, sp, #4
 8001676:	4620      	mov	r0, r4
 8001678:	4629      	mov	r1, r5
 800167a:	beab      	bkpt	0x00ab
 800167c:	4604      	mov	r4, r0
 800167e:	4620      	mov	r0, r4
 8001680:	f7ff ffd4 	bl	800162c <checkerror>
 8001684:	b005      	add	sp, #20
 8001686:	bd30      	pop	{r4, r5, pc}

08001688 <_read>:
 8001688:	b570      	push	{r4, r5, r6, lr}
 800168a:	460e      	mov	r6, r1
 800168c:	4615      	mov	r5, r2
 800168e:	f7ff ffb3 	bl	80015f8 <findslot>
 8001692:	4604      	mov	r4, r0
 8001694:	b930      	cbnz	r0, 80016a4 <_read+0x1c>
 8001696:	f7fe fefd 	bl	8000494 <__errno>
 800169a:	2309      	movs	r3, #9
 800169c:	6003      	str	r3, [r0, #0]
 800169e:	f04f 30ff 	mov.w	r0, #4294967295
 80016a2:	bd70      	pop	{r4, r5, r6, pc}
 80016a4:	462a      	mov	r2, r5
 80016a6:	4631      	mov	r1, r6
 80016a8:	6800      	ldr	r0, [r0, #0]
 80016aa:	f7ff ffdd 	bl	8001668 <_swiread>
 80016ae:	1c43      	adds	r3, r0, #1
 80016b0:	bf1f      	itttt	ne
 80016b2:	6863      	ldrne	r3, [r4, #4]
 80016b4:	1a28      	subne	r0, r5, r0
 80016b6:	181b      	addne	r3, r3, r0
 80016b8:	6063      	strne	r3, [r4, #4]
 80016ba:	e7f2      	b.n	80016a2 <_read+0x1a>

080016bc <_swilseek>:
 80016bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80016be:	460c      	mov	r4, r1
 80016c0:	4616      	mov	r6, r2
 80016c2:	f7ff ff99 	bl	80015f8 <findslot>
 80016c6:	4605      	mov	r5, r0
 80016c8:	b940      	cbnz	r0, 80016dc <_swilseek+0x20>
 80016ca:	f7fe fee3 	bl	8000494 <__errno>
 80016ce:	2309      	movs	r3, #9
 80016d0:	6003      	str	r3, [r0, #0]
 80016d2:	f04f 34ff 	mov.w	r4, #4294967295
 80016d6:	4620      	mov	r0, r4
 80016d8:	b003      	add	sp, #12
 80016da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016dc:	2e02      	cmp	r6, #2
 80016de:	d903      	bls.n	80016e8 <_swilseek+0x2c>
 80016e0:	f7fe fed8 	bl	8000494 <__errno>
 80016e4:	2316      	movs	r3, #22
 80016e6:	e7f3      	b.n	80016d0 <_swilseek+0x14>
 80016e8:	2e01      	cmp	r6, #1
 80016ea:	d112      	bne.n	8001712 <_swilseek+0x56>
 80016ec:	6843      	ldr	r3, [r0, #4]
 80016ee:	18e4      	adds	r4, r4, r3
 80016f0:	d4f6      	bmi.n	80016e0 <_swilseek+0x24>
 80016f2:	682b      	ldr	r3, [r5, #0]
 80016f4:	260a      	movs	r6, #10
 80016f6:	466f      	mov	r7, sp
 80016f8:	e9cd 3400 	strd	r3, r4, [sp]
 80016fc:	4630      	mov	r0, r6
 80016fe:	4639      	mov	r1, r7
 8001700:	beab      	bkpt	0x00ab
 8001702:	4606      	mov	r6, r0
 8001704:	4630      	mov	r0, r6
 8001706:	f7ff ff91 	bl	800162c <checkerror>
 800170a:	2800      	cmp	r0, #0
 800170c:	dbe1      	blt.n	80016d2 <_swilseek+0x16>
 800170e:	606c      	str	r4, [r5, #4]
 8001710:	e7e1      	b.n	80016d6 <_swilseek+0x1a>
 8001712:	2e02      	cmp	r6, #2
 8001714:	d1ed      	bne.n	80016f2 <_swilseek+0x36>
 8001716:	6803      	ldr	r3, [r0, #0]
 8001718:	260c      	movs	r6, #12
 800171a:	466f      	mov	r7, sp
 800171c:	9300      	str	r3, [sp, #0]
 800171e:	4630      	mov	r0, r6
 8001720:	4639      	mov	r1, r7
 8001722:	beab      	bkpt	0x00ab
 8001724:	4606      	mov	r6, r0
 8001726:	4630      	mov	r0, r6
 8001728:	f7ff ff80 	bl	800162c <checkerror>
 800172c:	1c43      	adds	r3, r0, #1
 800172e:	d0d0      	beq.n	80016d2 <_swilseek+0x16>
 8001730:	4404      	add	r4, r0
 8001732:	e7de      	b.n	80016f2 <_swilseek+0x36>

08001734 <_lseek>:
 8001734:	f7ff bfc2 	b.w	80016bc <_swilseek>

08001738 <_swiwrite>:
 8001738:	b530      	push	{r4, r5, lr}
 800173a:	b085      	sub	sp, #20
 800173c:	2405      	movs	r4, #5
 800173e:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001742:	9203      	str	r2, [sp, #12]
 8001744:	ad01      	add	r5, sp, #4
 8001746:	4620      	mov	r0, r4
 8001748:	4629      	mov	r1, r5
 800174a:	beab      	bkpt	0x00ab
 800174c:	4604      	mov	r4, r0
 800174e:	4620      	mov	r0, r4
 8001750:	f7ff ff6c 	bl	800162c <checkerror>
 8001754:	b005      	add	sp, #20
 8001756:	bd30      	pop	{r4, r5, pc}

08001758 <_write>:
 8001758:	b570      	push	{r4, r5, r6, lr}
 800175a:	460e      	mov	r6, r1
 800175c:	4615      	mov	r5, r2
 800175e:	f7ff ff4b 	bl	80015f8 <findslot>
 8001762:	4604      	mov	r4, r0
 8001764:	b930      	cbnz	r0, 8001774 <_write+0x1c>
 8001766:	f7fe fe95 	bl	8000494 <__errno>
 800176a:	2309      	movs	r3, #9
 800176c:	6003      	str	r3, [r0, #0]
 800176e:	f04f 30ff 	mov.w	r0, #4294967295
 8001772:	bd70      	pop	{r4, r5, r6, pc}
 8001774:	462a      	mov	r2, r5
 8001776:	4631      	mov	r1, r6
 8001778:	6800      	ldr	r0, [r0, #0]
 800177a:	f7ff ffdd 	bl	8001738 <_swiwrite>
 800177e:	1e03      	subs	r3, r0, #0
 8001780:	dbf5      	blt.n	800176e <_write+0x16>
 8001782:	6862      	ldr	r2, [r4, #4]
 8001784:	1ae8      	subs	r0, r5, r3
 8001786:	4402      	add	r2, r0
 8001788:	42ab      	cmp	r3, r5
 800178a:	6062      	str	r2, [r4, #4]
 800178c:	d1f1      	bne.n	8001772 <_write+0x1a>
 800178e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001792:	2000      	movs	r0, #0
 8001794:	f7ff bf5a 	b.w	800164c <error>

08001798 <_swiclose>:
 8001798:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800179a:	2402      	movs	r4, #2
 800179c:	9001      	str	r0, [sp, #4]
 800179e:	ad01      	add	r5, sp, #4
 80017a0:	4620      	mov	r0, r4
 80017a2:	4629      	mov	r1, r5
 80017a4:	beab      	bkpt	0x00ab
 80017a6:	4604      	mov	r4, r0
 80017a8:	4620      	mov	r0, r4
 80017aa:	f7ff ff3f 	bl	800162c <checkerror>
 80017ae:	b003      	add	sp, #12
 80017b0:	bd30      	pop	{r4, r5, pc}
	...

080017b4 <_close>:
 80017b4:	b538      	push	{r3, r4, r5, lr}
 80017b6:	4605      	mov	r5, r0
 80017b8:	f7ff ff1e 	bl	80015f8 <findslot>
 80017bc:	4604      	mov	r4, r0
 80017be:	b930      	cbnz	r0, 80017ce <_close+0x1a>
 80017c0:	f7fe fe68 	bl	8000494 <__errno>
 80017c4:	2309      	movs	r3, #9
 80017c6:	6003      	str	r3, [r0, #0]
 80017c8:	f04f 30ff 	mov.w	r0, #4294967295
 80017cc:	bd38      	pop	{r3, r4, r5, pc}
 80017ce:	3d01      	subs	r5, #1
 80017d0:	2d01      	cmp	r5, #1
 80017d2:	d809      	bhi.n	80017e8 <_close+0x34>
 80017d4:	4b09      	ldr	r3, [pc, #36]	; (80017fc <_close+0x48>)
 80017d6:	689a      	ldr	r2, [r3, #8]
 80017d8:	691b      	ldr	r3, [r3, #16]
 80017da:	429a      	cmp	r2, r3
 80017dc:	d104      	bne.n	80017e8 <_close+0x34>
 80017de:	f04f 33ff 	mov.w	r3, #4294967295
 80017e2:	6003      	str	r3, [r0, #0]
 80017e4:	2000      	movs	r0, #0
 80017e6:	e7f1      	b.n	80017cc <_close+0x18>
 80017e8:	6820      	ldr	r0, [r4, #0]
 80017ea:	f7ff ffd5 	bl	8001798 <_swiclose>
 80017ee:	2800      	cmp	r0, #0
 80017f0:	d1ec      	bne.n	80017cc <_close+0x18>
 80017f2:	f04f 33ff 	mov.w	r3, #4294967295
 80017f6:	6023      	str	r3, [r4, #0]
 80017f8:	e7e8      	b.n	80017cc <_close+0x18>
 80017fa:	bf00      	nop
 80017fc:	200000e8 	.word	0x200000e8

08001800 <_getpid>:
 8001800:	2001      	movs	r0, #1
 8001802:	4770      	bx	lr

08001804 <_swistat>:
 8001804:	b570      	push	{r4, r5, r6, lr}
 8001806:	460c      	mov	r4, r1
 8001808:	f7ff fef6 	bl	80015f8 <findslot>
 800180c:	4605      	mov	r5, r0
 800180e:	b930      	cbnz	r0, 800181e <_swistat+0x1a>
 8001810:	f7fe fe40 	bl	8000494 <__errno>
 8001814:	2309      	movs	r3, #9
 8001816:	6003      	str	r3, [r0, #0]
 8001818:	f04f 30ff 	mov.w	r0, #4294967295
 800181c:	bd70      	pop	{r4, r5, r6, pc}
 800181e:	6863      	ldr	r3, [r4, #4]
 8001820:	260c      	movs	r6, #12
 8001822:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001826:	6063      	str	r3, [r4, #4]
 8001828:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800182c:	64a3      	str	r3, [r4, #72]	; 0x48
 800182e:	4630      	mov	r0, r6
 8001830:	4629      	mov	r1, r5
 8001832:	beab      	bkpt	0x00ab
 8001834:	4605      	mov	r5, r0
 8001836:	4628      	mov	r0, r5
 8001838:	f7ff fef8 	bl	800162c <checkerror>
 800183c:	1c43      	adds	r3, r0, #1
 800183e:	bf1c      	itt	ne
 8001840:	6120      	strne	r0, [r4, #16]
 8001842:	2000      	movne	r0, #0
 8001844:	e7ea      	b.n	800181c <_swistat+0x18>

08001846 <_fstat>:
 8001846:	460b      	mov	r3, r1
 8001848:	b510      	push	{r4, lr}
 800184a:	2100      	movs	r1, #0
 800184c:	4604      	mov	r4, r0
 800184e:	2258      	movs	r2, #88	; 0x58
 8001850:	4618      	mov	r0, r3
 8001852:	f7fe fe49 	bl	80004e8 <memset>
 8001856:	4601      	mov	r1, r0
 8001858:	4620      	mov	r0, r4
 800185a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800185e:	f7ff bfd1 	b.w	8001804 <_swistat>

08001862 <_stat>:
 8001862:	b538      	push	{r3, r4, r5, lr}
 8001864:	460d      	mov	r5, r1
 8001866:	4604      	mov	r4, r0
 8001868:	2258      	movs	r2, #88	; 0x58
 800186a:	2100      	movs	r1, #0
 800186c:	4628      	mov	r0, r5
 800186e:	f7fe fe3b 	bl	80004e8 <memset>
 8001872:	4620      	mov	r0, r4
 8001874:	2100      	movs	r1, #0
 8001876:	f000 f811 	bl	800189c <_swiopen>
 800187a:	1c43      	adds	r3, r0, #1
 800187c:	4604      	mov	r4, r0
 800187e:	d00b      	beq.n	8001898 <_stat+0x36>
 8001880:	686b      	ldr	r3, [r5, #4]
 8001882:	4629      	mov	r1, r5
 8001884:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8001888:	606b      	str	r3, [r5, #4]
 800188a:	f7ff ffbb 	bl	8001804 <_swistat>
 800188e:	4605      	mov	r5, r0
 8001890:	4620      	mov	r0, r4
 8001892:	f7ff ff8f 	bl	80017b4 <_close>
 8001896:	462c      	mov	r4, r5
 8001898:	4620      	mov	r0, r4
 800189a:	bd38      	pop	{r3, r4, r5, pc}

0800189c <_swiopen>:
 800189c:	4b2b      	ldr	r3, [pc, #172]	; (800194c <_swiopen+0xb0>)
 800189e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80018a2:	4681      	mov	r9, r0
 80018a4:	460f      	mov	r7, r1
 80018a6:	2500      	movs	r5, #0
 80018a8:	461e      	mov	r6, r3
 80018aa:	b097      	sub	sp, #92	; 0x5c
 80018ac:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 80018b0:	1c61      	adds	r1, r4, #1
 80018b2:	d037      	beq.n	8001924 <_swiopen+0x88>
 80018b4:	3501      	adds	r5, #1
 80018b6:	2d14      	cmp	r5, #20
 80018b8:	d1f8      	bne.n	80018ac <_swiopen+0x10>
 80018ba:	f7fe fdeb 	bl	8000494 <__errno>
 80018be:	2318      	movs	r3, #24
 80018c0:	f04f 34ff 	mov.w	r4, #4294967295
 80018c4:	6003      	str	r3, [r0, #0]
 80018c6:	e03d      	b.n	8001944 <_swiopen+0xa8>
 80018c8:	f240 6301 	movw	r3, #1537	; 0x601
 80018cc:	f3c7 4400 	ubfx	r4, r7, #16, #1
 80018d0:	07ba      	lsls	r2, r7, #30
 80018d2:	bf48      	it	mi
 80018d4:	f044 0402 	orrmi.w	r4, r4, #2
 80018d8:	421f      	tst	r7, r3
 80018da:	bf18      	it	ne
 80018dc:	f044 0404 	orrne.w	r4, r4, #4
 80018e0:	073b      	lsls	r3, r7, #28
 80018e2:	bf48      	it	mi
 80018e4:	f024 0404 	bicmi.w	r4, r4, #4
 80018e8:	4648      	mov	r0, r9
 80018ea:	bf48      	it	mi
 80018ec:	f044 0408 	orrmi.w	r4, r4, #8
 80018f0:	f8cd 9000 	str.w	r9, [sp]
 80018f4:	f7fe fc3c 	bl	8000170 <strlen>
 80018f8:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80018fc:	2401      	movs	r4, #1
 80018fe:	4620      	mov	r0, r4
 8001900:	4641      	mov	r1, r8
 8001902:	beab      	bkpt	0x00ab
 8001904:	4604      	mov	r4, r0
 8001906:	2c00      	cmp	r4, #0
 8001908:	db07      	blt.n	800191a <_swiopen+0x7e>
 800190a:	2300      	movs	r3, #0
 800190c:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 8001910:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8001914:	462c      	mov	r4, r5
 8001916:	6073      	str	r3, [r6, #4]
 8001918:	e014      	b.n	8001944 <_swiopen+0xa8>
 800191a:	4620      	mov	r0, r4
 800191c:	f7ff fe96 	bl	800164c <error>
 8001920:	4604      	mov	r4, r0
 8001922:	e00f      	b.n	8001944 <_swiopen+0xa8>
 8001924:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 8001928:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 800192c:	46e8      	mov	r8, sp
 800192e:	d1cb      	bne.n	80018c8 <_swiopen+0x2c>
 8001930:	4641      	mov	r1, r8
 8001932:	4648      	mov	r0, r9
 8001934:	f7ff ff95 	bl	8001862 <_stat>
 8001938:	3001      	adds	r0, #1
 800193a:	d0c5      	beq.n	80018c8 <_swiopen+0x2c>
 800193c:	f7fe fdaa 	bl	8000494 <__errno>
 8001940:	2311      	movs	r3, #17
 8001942:	6003      	str	r3, [r0, #0]
 8001944:	4620      	mov	r0, r4
 8001946:	b017      	add	sp, #92	; 0x5c
 8001948:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800194c:	200000e8 	.word	0x200000e8

08001950 <_get_semihosting_exts>:
 8001950:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001954:	4606      	mov	r6, r0
 8001956:	460f      	mov	r7, r1
 8001958:	482a      	ldr	r0, [pc, #168]	; (8001a04 <_get_semihosting_exts+0xb4>)
 800195a:	2100      	movs	r1, #0
 800195c:	4615      	mov	r5, r2
 800195e:	f7ff ff9d 	bl	800189c <_swiopen>
 8001962:	4604      	mov	r4, r0
 8001964:	462a      	mov	r2, r5
 8001966:	2100      	movs	r1, #0
 8001968:	4630      	mov	r0, r6
 800196a:	f7fe fdbd 	bl	80004e8 <memset>
 800196e:	1c63      	adds	r3, r4, #1
 8001970:	d016      	beq.n	80019a0 <_get_semihosting_exts+0x50>
 8001972:	4620      	mov	r0, r4
 8001974:	f7ff fe40 	bl	80015f8 <findslot>
 8001978:	f04f 080c 	mov.w	r8, #12
 800197c:	4681      	mov	r9, r0
 800197e:	4640      	mov	r0, r8
 8001980:	4649      	mov	r1, r9
 8001982:	beab      	bkpt	0x00ab
 8001984:	4680      	mov	r8, r0
 8001986:	4640      	mov	r0, r8
 8001988:	f7ff fe50 	bl	800162c <checkerror>
 800198c:	2803      	cmp	r0, #3
 800198e:	dd02      	ble.n	8001996 <_get_semihosting_exts+0x46>
 8001990:	1ec3      	subs	r3, r0, #3
 8001992:	42ab      	cmp	r3, r5
 8001994:	dc08      	bgt.n	80019a8 <_get_semihosting_exts+0x58>
 8001996:	4620      	mov	r0, r4
 8001998:	f7ff ff0c 	bl	80017b4 <_close>
 800199c:	f04f 34ff 	mov.w	r4, #4294967295
 80019a0:	4620      	mov	r0, r4
 80019a2:	b003      	add	sp, #12
 80019a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80019a8:	2204      	movs	r2, #4
 80019aa:	4620      	mov	r0, r4
 80019ac:	eb0d 0102 	add.w	r1, sp, r2
 80019b0:	f7ff fe6a 	bl	8001688 <_read>
 80019b4:	2803      	cmp	r0, #3
 80019b6:	ddee      	ble.n	8001996 <_get_semihosting_exts+0x46>
 80019b8:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80019bc:	2b53      	cmp	r3, #83	; 0x53
 80019be:	d1ea      	bne.n	8001996 <_get_semihosting_exts+0x46>
 80019c0:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80019c4:	2b48      	cmp	r3, #72	; 0x48
 80019c6:	d1e6      	bne.n	8001996 <_get_semihosting_exts+0x46>
 80019c8:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80019cc:	2b46      	cmp	r3, #70	; 0x46
 80019ce:	d1e2      	bne.n	8001996 <_get_semihosting_exts+0x46>
 80019d0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80019d4:	2b42      	cmp	r3, #66	; 0x42
 80019d6:	d1de      	bne.n	8001996 <_get_semihosting_exts+0x46>
 80019d8:	2201      	movs	r2, #1
 80019da:	4639      	mov	r1, r7
 80019dc:	4620      	mov	r0, r4
 80019de:	f7ff fe6d 	bl	80016bc <_swilseek>
 80019e2:	2800      	cmp	r0, #0
 80019e4:	dbd7      	blt.n	8001996 <_get_semihosting_exts+0x46>
 80019e6:	462a      	mov	r2, r5
 80019e8:	4631      	mov	r1, r6
 80019ea:	4620      	mov	r0, r4
 80019ec:	f7ff fe4c 	bl	8001688 <_read>
 80019f0:	4605      	mov	r5, r0
 80019f2:	4620      	mov	r0, r4
 80019f4:	f7ff fede 	bl	80017b4 <_close>
 80019f8:	4628      	mov	r0, r5
 80019fa:	f7ff fe17 	bl	800162c <checkerror>
 80019fe:	4604      	mov	r4, r0
 8001a00:	e7ce      	b.n	80019a0 <_get_semihosting_exts+0x50>
 8001a02:	bf00      	nop
 8001a04:	08001d73 	.word	0x08001d73

08001a08 <initialise_semihosting_exts>:
 8001a08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001a0a:	2100      	movs	r1, #0
 8001a0c:	2201      	movs	r2, #1
 8001a0e:	4d09      	ldr	r5, [pc, #36]	; (8001a34 <initialise_semihosting_exts+0x2c>)
 8001a10:	4c09      	ldr	r4, [pc, #36]	; (8001a38 <initialise_semihosting_exts+0x30>)
 8001a12:	a801      	add	r0, sp, #4
 8001a14:	6029      	str	r1, [r5, #0]
 8001a16:	6022      	str	r2, [r4, #0]
 8001a18:	f7ff ff9a 	bl	8001950 <_get_semihosting_exts>
 8001a1c:	2800      	cmp	r0, #0
 8001a1e:	dd07      	ble.n	8001a30 <initialise_semihosting_exts+0x28>
 8001a20:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001a24:	f003 0201 	and.w	r2, r3, #1
 8001a28:	f003 0302 	and.w	r3, r3, #2
 8001a2c:	602a      	str	r2, [r5, #0]
 8001a2e:	6023      	str	r3, [r4, #0]
 8001a30:	b003      	add	sp, #12
 8001a32:	bd30      	pop	{r4, r5, pc}
 8001a34:	200000ac 	.word	0x200000ac
 8001a38:	200000b0 	.word	0x200000b0

08001a3c <_has_ext_exit_extended>:
 8001a3c:	b510      	push	{r4, lr}
 8001a3e:	4c04      	ldr	r4, [pc, #16]	; (8001a50 <_has_ext_exit_extended+0x14>)
 8001a40:	6822      	ldr	r2, [r4, #0]
 8001a42:	2a00      	cmp	r2, #0
 8001a44:	da01      	bge.n	8001a4a <_has_ext_exit_extended+0xe>
 8001a46:	f7ff ffdf 	bl	8001a08 <initialise_semihosting_exts>
 8001a4a:	6820      	ldr	r0, [r4, #0]
 8001a4c:	bd10      	pop	{r4, pc}
 8001a4e:	bf00      	nop
 8001a50:	200000ac 	.word	0x200000ac

08001a54 <_has_ext_stdout_stderr>:
 8001a54:	b510      	push	{r4, lr}
 8001a56:	4c04      	ldr	r4, [pc, #16]	; (8001a68 <_has_ext_stdout_stderr+0x14>)
 8001a58:	6822      	ldr	r2, [r4, #0]
 8001a5a:	2a00      	cmp	r2, #0
 8001a5c:	da01      	bge.n	8001a62 <_has_ext_stdout_stderr+0xe>
 8001a5e:	f7ff ffd3 	bl	8001a08 <initialise_semihosting_exts>
 8001a62:	6820      	ldr	r0, [r4, #0]
 8001a64:	bd10      	pop	{r4, pc}
 8001a66:	bf00      	nop
 8001a68:	200000b0 	.word	0x200000b0

08001a6c <initialise_monitor_handles>:
 8001a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001a70:	2303      	movs	r3, #3
 8001a72:	2400      	movs	r4, #0
 8001a74:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 8001b24 <initialise_monitor_handles+0xb8>
 8001a78:	b085      	sub	sp, #20
 8001a7a:	f8cd 9004 	str.w	r9, [sp, #4]
 8001a7e:	f10d 0804 	add.w	r8, sp, #4
 8001a82:	9303      	str	r3, [sp, #12]
 8001a84:	2501      	movs	r5, #1
 8001a86:	9402      	str	r4, [sp, #8]
 8001a88:	4628      	mov	r0, r5
 8001a8a:	4641      	mov	r1, r8
 8001a8c:	beab      	bkpt	0x00ab
 8001a8e:	4605      	mov	r5, r0
 8001a90:	4a20      	ldr	r2, [pc, #128]	; (8001b14 <initialise_monitor_handles+0xa8>)
 8001a92:	4623      	mov	r3, r4
 8001a94:	f04f 31ff 	mov.w	r1, #4294967295
 8001a98:	4614      	mov	r4, r2
 8001a9a:	4e1f      	ldr	r6, [pc, #124]	; (8001b18 <initialise_monitor_handles+0xac>)
 8001a9c:	6035      	str	r5, [r6, #0]
 8001a9e:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 8001aa2:	3301      	adds	r3, #1
 8001aa4:	2b14      	cmp	r3, #20
 8001aa6:	d1fa      	bne.n	8001a9e <initialise_monitor_handles+0x32>
 8001aa8:	f7ff ffd4 	bl	8001a54 <_has_ext_stdout_stderr>
 8001aac:	4d1b      	ldr	r5, [pc, #108]	; (8001b1c <initialise_monitor_handles+0xb0>)
 8001aae:	b1d0      	cbz	r0, 8001ae6 <initialise_monitor_handles+0x7a>
 8001ab0:	f04f 0a03 	mov.w	sl, #3
 8001ab4:	2304      	movs	r3, #4
 8001ab6:	f8cd 9004 	str.w	r9, [sp, #4]
 8001aba:	2701      	movs	r7, #1
 8001abc:	f8cd a00c 	str.w	sl, [sp, #12]
 8001ac0:	9302      	str	r3, [sp, #8]
 8001ac2:	4638      	mov	r0, r7
 8001ac4:	4641      	mov	r1, r8
 8001ac6:	beab      	bkpt	0x00ab
 8001ac8:	4683      	mov	fp, r0
 8001aca:	4b15      	ldr	r3, [pc, #84]	; (8001b20 <initialise_monitor_handles+0xb4>)
 8001acc:	f8cd 9004 	str.w	r9, [sp, #4]
 8001ad0:	f8c3 b000 	str.w	fp, [r3]
 8001ad4:	2308      	movs	r3, #8
 8001ad6:	f8cd a00c 	str.w	sl, [sp, #12]
 8001ada:	9302      	str	r3, [sp, #8]
 8001adc:	4638      	mov	r0, r7
 8001ade:	4641      	mov	r1, r8
 8001ae0:	beab      	bkpt	0x00ab
 8001ae2:	4607      	mov	r7, r0
 8001ae4:	602f      	str	r7, [r5, #0]
 8001ae6:	682b      	ldr	r3, [r5, #0]
 8001ae8:	3301      	adds	r3, #1
 8001aea:	bf02      	ittt	eq
 8001aec:	4b0c      	ldreq	r3, [pc, #48]	; (8001b20 <initialise_monitor_handles+0xb4>)
 8001aee:	681b      	ldreq	r3, [r3, #0]
 8001af0:	602b      	streq	r3, [r5, #0]
 8001af2:	6833      	ldr	r3, [r6, #0]
 8001af4:	2600      	movs	r6, #0
 8001af6:	6023      	str	r3, [r4, #0]
 8001af8:	6066      	str	r6, [r4, #4]
 8001afa:	f7ff ffab 	bl	8001a54 <_has_ext_stdout_stderr>
 8001afe:	b130      	cbz	r0, 8001b0e <initialise_monitor_handles+0xa2>
 8001b00:	4b07      	ldr	r3, [pc, #28]	; (8001b20 <initialise_monitor_handles+0xb4>)
 8001b02:	681b      	ldr	r3, [r3, #0]
 8001b04:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8001b08:	682b      	ldr	r3, [r5, #0]
 8001b0a:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8001b0e:	b005      	add	sp, #20
 8001b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001b14:	200000e8 	.word	0x200000e8
 8001b18:	200000e0 	.word	0x200000e0
 8001b1c:	200000dc 	.word	0x200000dc
 8001b20:	200000e4 	.word	0x200000e4
 8001b24:	08001d89 	.word	0x08001d89

08001b28 <_isatty>:
 8001b28:	b570      	push	{r4, r5, r6, lr}
 8001b2a:	f7ff fd65 	bl	80015f8 <findslot>
 8001b2e:	2509      	movs	r5, #9
 8001b30:	4604      	mov	r4, r0
 8001b32:	b920      	cbnz	r0, 8001b3e <_isatty+0x16>
 8001b34:	f7fe fcae 	bl	8000494 <__errno>
 8001b38:	6005      	str	r5, [r0, #0]
 8001b3a:	4620      	mov	r0, r4
 8001b3c:	bd70      	pop	{r4, r5, r6, pc}
 8001b3e:	4628      	mov	r0, r5
 8001b40:	4621      	mov	r1, r4
 8001b42:	beab      	bkpt	0x00ab
 8001b44:	4604      	mov	r4, r0
 8001b46:	2c01      	cmp	r4, #1
 8001b48:	d0f7      	beq.n	8001b3a <_isatty+0x12>
 8001b4a:	f7fe fca3 	bl	8000494 <__errno>
 8001b4e:	2400      	movs	r4, #0
 8001b50:	4605      	mov	r5, r0
 8001b52:	2613      	movs	r6, #19
 8001b54:	4630      	mov	r0, r6
 8001b56:	4621      	mov	r1, r4
 8001b58:	beab      	bkpt	0x00ab
 8001b5a:	4606      	mov	r6, r0
 8001b5c:	602e      	str	r6, [r5, #0]
 8001b5e:	e7ec      	b.n	8001b3a <_isatty+0x12>

08001b60 <_exit>:
 8001b60:	4601      	mov	r1, r0
 8001b62:	b508      	push	{r3, lr}
 8001b64:	f04f 30ff 	mov.w	r0, #4294967295
 8001b68:	4a01      	ldr	r2, [pc, #4]	; (8001b70 <_exit+0x10>)
 8001b6a:	f000 f803 	bl	8001b74 <_kill_shared>
 8001b6e:	bf00      	nop
 8001b70:	00020026 	.word	0x00020026

08001b74 <_kill_shared>:
 8001b74:	b507      	push	{r0, r1, r2, lr}
 8001b76:	e9cd 2100 	strd	r2, r1, [sp]
 8001b7a:	f7ff ff5f 	bl	8001a3c <_has_ext_exit_extended>
 8001b7e:	2800      	cmp	r0, #0
 8001b80:	bf14      	ite	ne
 8001b82:	2420      	movne	r4, #32
 8001b84:	2418      	moveq	r4, #24
 8001b86:	f7ff ff59 	bl	8001a3c <_has_ext_exit_extended>
 8001b8a:	b120      	cbz	r0, 8001b96 <_kill_shared+0x22>
 8001b8c:	466d      	mov	r5, sp
 8001b8e:	4620      	mov	r0, r4
 8001b90:	4629      	mov	r1, r5
 8001b92:	beab      	bkpt	0x00ab
 8001b94:	4604      	mov	r4, r0
 8001b96:	9d00      	ldr	r5, [sp, #0]
 8001b98:	e7f9      	b.n	8001b8e <_kill_shared+0x1a>
	...

08001b9c <_kill>:
 8001b9c:	2906      	cmp	r1, #6
 8001b9e:	b508      	push	{r3, lr}
 8001ba0:	bf0c      	ite	eq
 8001ba2:	4a02      	ldreq	r2, [pc, #8]	; (8001bac <_kill+0x10>)
 8001ba4:	4a02      	ldrne	r2, [pc, #8]	; (8001bb0 <_kill+0x14>)
 8001ba6:	f7ff ffe5 	bl	8001b74 <_kill_shared>
 8001baa:	bf00      	nop
 8001bac:	00020023 	.word	0x00020023
 8001bb0:	00020026 	.word	0x00020026

08001bb4 <_init>:
 8001bb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001bb6:	bf00      	nop
 8001bb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001bba:	bc08      	pop	{r3}
 8001bbc:	469e      	mov	lr, r3
 8001bbe:	4770      	bx	lr

08001bc0 <_fini>:
 8001bc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001bc2:	bf00      	nop
 8001bc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001bc6:	bc08      	pop	{r3}
 8001bc8:	469e      	mov	lr, r3
 8001bca:	4770      	bx	lr
